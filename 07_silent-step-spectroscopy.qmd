# Spectroscopy for the Weak Spectrum {#sec-silent-step-spectroscopy}

::: {.content-hidden when-format="pdf"}
{{< include style/macros.md >}}
:::

## The Weak Spectroscopy Game

### The Game

::: {#def-weak-spectroscopy-game}

For a system $\system=(\states,\actions,\step{})$,
the $8$-dimensional *weak spectroscopy energy game*
$\gamespectroscopyw^{\system}=(G,G_{\defender},\gamemoveblank,w)$
consists of

- *attacker (immediate) positions* $\attackerpos{p,Q} \in G_\attacker$,
- **new:** *attacker delayed positions* $\attackerpos[\varepsilon]{p,Q} \in G_\attacker$,
- *attacker conjunct positions* $\attackerpos[\land]{p,q} \in G_\attacker$,
- **new:** *attacker branching positions* $\attackerpos[\eta]{p,Q} \in G_\defender$,
- *defender conjunction positions* $\defenderpos{p,Q} \in G_\defender$,
- **new:** *defender stable conjunction positions* $\defenderpos[s]{p,Q} \in G_\defender$,
- **new:** *defender branching positions* $\defenderpos[\eta]{p,\alpha,p',Q,Q_\alpha} \in G_\defender$,

where $p, q \in \states$ and $Q, Q_\alpha \in \powerset{\states}$, and sixteen kinds of moves:{{<isb inductive Spectroscopy_Game LTS_Tau.spectroscopy_moves>}}
$$
\begin{array}{rrcll}
  \textit{delay}
  & \attackerpos{p,Q}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \attackerpos[\varepsilon]{p,Q'}
  & \text{if $Q \stepweak Q'$,}
  \\
  \textit{procrastination}
  & \attackerpos[\varepsilon]{p,Q}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \attackerpos[\varepsilon]{p',Q}
  & \text{if $p \step{\tau} p'$, $p \neq p'$,}
  \\
  \textit{observation}
  & \attackerpos[\varepsilon]{p,Q}
  & \gamemove{-1,0,0,0,0,0,0,0}
  & \attackerpos{p',Q'}
  & \text{if $p \step{a} p'$, $Q \step{a} Q'$, $a \neq \tau$,}
  \\
  \textit{finishing}
  & \attackerpos{p,\varnothing}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \defenderpos{p,\varnothing},
  &
  \\
  \textit{immediate conj.}
  & \attackerpos{p,Q}
  & \gamemove{0,0,0,0,-1,0,0,0}
  & \defenderpos{p,Q}
  & \text{if $Q \neq \varnothing$,}
  \\
  \textit{late conj.}
  & \attackerpos[\varepsilon]{p,Q}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \defenderpos{p,Q},
  &
  \\
  \textit{conj. answer}
  & \defenderpos{p,Q}
  & \gamemove{0,0,-1,0,0,0,0,0}
  & \attackerpos[\land]{p,q}
  & \text{if $q \in Q$,}
  \\
  \textit{positive conjunct}
  & \attackerpos[\land]{p,q}
  & \gamemove{\updmin{1,6},0,0,0,0,0,0,0}
  & \attackerpos[\varepsilon]{p,Q}
  & \text{if $\set{q} \stepweak Q$,}
  \\
  \textit{negative conjunct}
  & \attackerpos[\land]{p,q}
  & \gamemove{\updmin{1,7},0,0,0,0,0,0,-1}
  & \attackerpos[\varepsilon]{q,Q}
  & \text{if $\set{p} \stepweak Q$ and $p \neq q$,}
  \\
  \hline
  \textit{branching conj.}\vphantom{I^{I^I}}
  & \attackerpos[\varepsilon]{p,Q}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \defenderpos[\eta]{p,\alpha,p',Q \setminus Q_\alpha,Q_\alpha}
  & \text{if $p \step{\hmlopt\alpha} p'$, $Q_\alpha \subseteq Q$,}
  \\
  \textit{branch. answer}
  & \defenderpos[\eta]{p,\alpha,p',Q,Q_\alpha}
  & \gamemove{0,-1,-1,0,0,0,0,0}
  & \attackerpos[\land]{p,q}
  & \text{if $q \in Q$,}
  \\
  \textit{branch. observation}
  & \defenderpos[\eta]{p,\alpha,p',Q,Q_\alpha}
  & \gamemove{\updmin{1,6},-1,-1,0,0,0,0,0}
  & \attackerpos[\eta]{p',Q'}
  & \text{with $Q_\alpha \step{\hmlopt\alpha} Q'$,}
  \\
  \textit{branch. accounting}
  & \attackerpos[\eta]{p,Q}
  & \gamemove{-1,0,0,0,0,0,0,0}
  & \attackerpos{p,Q},
  \\
  \hline
  \textit{stable conj.}\vphantom{I^{I^I}}
  & \attackerpos[\varepsilon]{p,Q}
  & \gamemove{0,0,0,0,0,0,0,0}
  & \defenderpos[s]{p,Q'}
  & \text{if } Q' = \set{ q \in Q \mid q \nostep{\tau}}, p \nostep{\tau},
  \\
  \textit{conj. stable answer}
  & \defenderpos[s]{p,Q}
  & \gamemove{0,0,0,-1,0,0,0,0}
  & \attackerpos[\land]{p,q}
  & \text{if $q \in Q$,}
  \\
  \textit{stable finishing}
  & \defenderpos[s]{p,\varnothing}
  & \gamemove{0,0,0,-1,0,0,0,-1}
  & \defenderpos{p,\varnothing}.
\end{array}
$$
:::

### Correctness {#sec-correctness-weak-spectroscopy}

Establishing correctness now proceeds mostly as we are used to from @sec-correctness-poly-spectroscopy and -@sec-correctness-strong-spectroscopy.
This subsection limits itself to citing the lemma heads and the inductive predicates used in the full proofs of @bj2025silentStepSpectroscopyJournal.

The following facts moreover have been fully formalized in Isabelle/HOl, which will be the topic of the following @sec-isabelle-formalization.

::: {#def-strategy-formulas-weak}
#### Strategy Formulas for $\gamespectroscopyw$

The set of *strategy formulas* for a game position $g$ and a budget $e$, $\stratweak(g, e)$, in the context of a weak spectroscopy game $\gamespectroscopyw^{\system}$ is defined inductively by the rules in @fig-weak-spectroscopy-strategy-formulas.{{<isb inductive Strategy_Formulas weak_spectroscopy_game.strategy_formula>}}
:::

:::{#fig-weak-spectroscopy-strategy-formulas .column-page fig-pos='t!' fig-env="figure*"}
$$
\inferrule[delay]{
  \attackerpos{p,Q} \gamemove{u} \attackerpos[\varepsilon]{p,Q'} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\attackerpos[\varepsilon]{p,Q'}) \quad
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q'}, e')
} {
  \hmleps\chi \in \stratweak(\attackerpos{p,Q}, e)
}
$$
$$
\inferrule[procrastination]{
  \attackerpos[\varepsilon]{p,Q} \gamemove{u} \attackerpos[\varepsilon]{p',Q} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\attackerpos[\varepsilon]{p',Q}) \quad
  \chi \in \stratweak(\attackerpos[\varepsilon]{p',Q}, e')
} {
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)
}
$$
$$
\inferrule[observation]{
  \attackerpos[\varepsilon]{p,Q} \gamemove{u} \attackerpos{p',Q'} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\attackerpos{p',Q'}) \\
  p \step{a} p' \quad
  Q \step{a} Q' \quad
  \varphi \in \stratweak(\attackerpos{p',Q'}, e')
} {
  \hmlobs{a}\varphi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)
}
$$
$$
\inferrule[immediate conj.]{
  \attackerpos{p,Q} \gamemove{u} \defenderpos{p,Q} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\defenderpos{p,Q}) \quad
  \varphi \in \stratweak(\defenderpos{p,Q}, e')
} {
  \varphi \in \stratweak(\attackerpos{p,Q}, e)
}
$$
$$
\inferrule[late conj.]{
  \attackerpos[\varepsilon]{p,Q} \gamemove{u} \defenderpos{p,Q} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\defenderpos{p,Q}) \quad
  \chi \in \stratweak(\defenderpos{p,Q}, e')
} {
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)
}
$$
$$
\inferrule[conj. answer]{
  \defenderpos{p,Q} \gamemove{u_q} \attackerpos[\land]{p,q} \\
  \forall q \in Q \ldotp \;
  e_q = \energyupdate(e, u_q) \in \attackerwins(\attackerpos[\land]{p,q}) \; \land \;
  \psi_q \in \stratweak(\attackerpos[\land]{p,q}, e_q)
} {
  \hmlands\set{ \psi_q \mid q \in Q} \in \stratweak(\defenderpos{p,Q}, e)
}
$$
$$
\inferrule[positive conjunct]{
  \attackerpos[\land]{p,q} \gamemove{u} \attackerpos[\varepsilon]{p,Q'} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\attackerpos[\varepsilon]{p,Q'}) \quad
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q'}, e')
} {
  \hmleps\chi \in \stratweak(\attackerpos[\land]{p,q}, e)
}
$$
$$
\inferrule[negative conjunct]{
  \attackerpos[\land]{p,q} \gamemove{u} \attackerpos[\varepsilon]{q,P'} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\attackerpos[\varepsilon]{q,P'}) \quad
  \chi \in \stratweak(\attackerpos[\varepsilon]{q,P'}, e')
} {
  \hmlneg \hmleps\chi \in \stratweak(\attackerpos[\land]{p,q}, e)
}
$$
$$
\inferrule[stable conj.]{
  \attackerpos[\varepsilon]{p,Q} \gamemove{u} \defenderpos[s]{p,Q'} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\defenderpos[s]{p,Q'}) \quad
  \chi \in \stratweak(\defenderpos[s]{p,Q'}, e')
} {
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)
}
$$
$$
\inferrule[stable conj. answer]{
  \defenderpos[s]{p,Q} \gamemove{u_q} \attackerpos[\land]{p,q} \quad
  Q \neq \varnothing \\
  \forall q \in Q \ldotp \;
  e_q = \energyupdate(e, u_q) \in \attackerwins(\attackerpos[\land]{p,q}) \; \land \;
  \psi_q \in \stratweak(\attackerpos[\land]{p,q}, e_q)
} {
  \hmlands \left(\set{\hmlneg\hmlobs{\tau}\hmltrue } \cup \set{ \psi_q \mid q \in Q }\right) \in \stratweak(\defenderpos[s]{p,Q}, e)
}
$$
$$
\inferrule[stable finishing]{
  \defenderpos[s]{p,\varnothing} \gamemove{u} \defenderpos{p,\varnothing} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\defenderpos{p,\varnothing})
} {
  \hmlands \set{\hmlneg\hmlobs{\tau}\hmltrue } \in \stratweak(\defenderpos[s]{p,Q}, e)
}
$$
$$
\inferrule[branching conj.]{
  \attackerpos[\varepsilon]{p,Q} \gamemove{u} \defenderpos[\eta]{p,\alpha,p',Q',Q_\alpha} \quad
  e' = \energyupdate(e, u) \in \attackerwins(\defenderpos[\eta]{p,\alpha,p',Q',Q_\alpha}) \\
  \chi \in \stratweak(\defenderpos[\eta]{p,\alpha,p',Q',Q_\alpha}, e')
} {
  \chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)
}
$$
$$
\inferrule[branch. answer]{
  g_\mathrm{d} = \defenderpos[\eta]{p,\alpha,p',Q,Q_\alpha} \gamemove{u_\alpha} \attackerpos[\eta]{p',Q'} \gamemove{u'_\alpha} \attackerpos{p',Q'} \\
  e_\alpha = \energyupdate(\energyupdate(e, u_\alpha), u'_\alpha) \in \attackerwins(\attackerpos{p',Q'}) \quad
  \varphi_\alpha \in \stratweak(\attackerpos{p',Q'}, e_\alpha)\\
  \forall q \in Q \ldotp \;
  g_\mathrm{d} \gamemove{u_q} \attackerpos[\land]{p,q} \; \land \;
  e_q = \energyupdate(e, u_q) \in \attackerwins(\attackerpos[\land]{p,q}) \; \land \;
  \psi_q \in \stratweak(\attackerpos[\land]{p,q}, e_q)
} {
  \hmlands \left(\set{\hmlopt{\alpha} \varphi_\alpha } \cup \set{ \psi_q \mid q \in Q }\right) \in \stratweak(\defenderpos[\eta]{p,\alpha,p',Q,Q_\alpha}, e)
}
$$

Strategy formulas for the weak spectroscopy.
:::


::: {#lem-weak-spectroscopy-game-formulas}
If $e \in \attackerwins(\attackerpos{p,Q})$, then there is $\varphi \in \stratweak (\attackerpos{p,Q}, e)$ with $\expr[\literal{weak}](\varphi) \leq e$.{{<isb lemma Strategy_Formulsas weak_spectroscopy_game.winning_budget_implies_strategy_formula>}}
:::
:::proof

By induction over game positions $g$ and energies $e$ according to the inductive characterization of attacker winning budgets @prp-winning-budget-rules and with respect to the following property:

1. If $e \in \attackerwins(\attackerpos{p,Q})$,
  then there is $\varphi \in \stratweak(\attackerpos{p,Q}, e)$ with $\expr[\literal{weak}](\varphi) \leq e$;
2. If $e \in \attackerwins(\attackerpos[\varepsilon]{p,Q})$,
  then there is $\chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)$ with $\expr[\varepsilon](\chi) \leq e$;
3. If $e \in \attackerwins(\attackerpos[\land]{p,q})$,
  then there is $\psi \in \stratweak(\attackerpos[\land]{p,q}, e)$ with $\expr[\land](\psi) \leq e$;
4. If $e \in \attackerwins(\defenderpos{p,Q})$,
  then there is $\hmlands \Psi \in \stratweak(\defenderpos{p,Q}, e)$ with $\expr[\varepsilon](\hmlands \Psi) \leq e$;
5. If $e \in \attackerwins(\defenderpos[s]{p,Q})$,
  then there is $\hmlands \left(\set{\hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi\right) \in \stratweak(\defenderpos[s]{p,Q}, e)$ with $\expr[\varepsilon](\hmlands \left(\set{\hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi\right)) \leq e$;
6. If $e \in \attackerwins(\defenderpos[\eta]{p,\alpha,p',Q \setminus Q_\alpha,Q_\alpha})$,
  then there is $\hmlands \left(\set{\hmlopt{\alpha}\varphi' } \cup \Psi\right) \in \stratweak(\defenderpos[\eta]{p,\alpha,p',Q \setminus Q_\alpha,Q_\alpha}, e)$ with $\expr[\varepsilon](\hmlands \left(\set{\hmlopt{\alpha}\varphi' } \cup \Psi\right)) \leq e$. \qedhere
:::

::: {#lem-weak-spectroscopy-game-soundness}
If $\varphi \in \stratweak(\attackerpos{p,Q}, e)$,
then $\varphi$ distinguishes $p$ from $Q$.{{<isb lemma Strategy_Formulsas weak_spectroscopy_game.strategy_formulas_distinguish>}}
:::
:::proof
By induction over the derivation of $~\cdots \in \stratweak(g, e)$ according to @def-strategy-formulas-weak on the following inductive property:

1. If $\varphi \in \stratweak(\attackerpos{p,Q}, e)$,
  then $\varphi$ distinguishes $p$ from $Q$;
2. If $\chi \in \stratweak(\attackerpos[\varepsilon]{p,Q}, e)$ and $Q \stepweak Q$,
  then $\hmleps\chi$ distinguishes $p$ from $Q$;
3. If $\psi \in \stratweak(\attackerpos[\land]{p,q}, e)$,
  then $\psi$ distinguishes $p$ from $\{ q \}$;
4. If $\hmlands \Psi \in \stratweak(\defenderpos{p,Q}, e)$,
  then $\hmlands \Psi$ distinguishes $p$ from $Q$;
5. If $\hmlands \left(\set{\hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi\right) \in \stratweak(\defenderpos[s]{p,Q}, e)$
  and $p$ is stable,
  then the stable conjunction $\hmlands \left(\set{\hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi\right)$ distinguishes $p$ from $Q$;
6. If $\hmlands \left(\set{\hmlopt{\alpha}\varphi' } \cup \Psi\right) \in \stratweak(\defenderpos[\eta]{p,\alpha,p',Q \setminus Q_\alpha,Q_\alpha}, e)$,
    $p \step{\hmlopt\alpha} p'$ and $Q_\alpha \subseteq Q$,
  then the branching conjunction $\hmlands \left(\set{\hmlopt{\alpha}\varphi' } \cup \Psi\right)$ distinguishes $p$ from $Q$.
:::

::: {#lem-weak-spectroscopy-game-completeness}
If $\varphi \in \hmlsrbb$ distinguishes $p$ from $Q$, then $\expr[\literal{weak}](\varphi) \in \attackerwins^{\gamespectroscopyw}(\attackerpos{p,Q})$.{{<isb lemma Distinction_Implies_Winning_Budgets weak_spectroscopy_game.distinction_implies_winning_budgets>}}
:::
:::proof
By mutual structural induction on $\varphi$, $\chi$, and $\psi$ with respect to the following claims:

1. If $\varphi \in \hmlsrbb$ distinguishes $p$ from $Q \neq \varnothing$,
  then $\expr[\literal{weak}](\varphi) \in \attackerwins(\attackerpos{p,Q})$;
2. If $\chi$ distinguishes $p$ from $Q \neq \varnothing$ and $Q$ is closed under $\stepweak$ (that is $Q \stepweak Q$),
  then $\expr[\varepsilon](\chi) \in \attackerwins(\attackerpos[\varepsilon]{p,Q})$;
3. If $\psi$ distinguishes $p$ from $q$,
  then $\expr[\land](\psi) \in \attackerwins(\attackerpos[\land]{p,q})$;
4. If $\hmlands \Psi$ distinguishes $p$ from $Q \neq \varnothing$,
  then $\expr[\varepsilon](\hmlands \Psi) \in \attackerwins(\defenderpos{p,Q})$;
5. If $\hmlands \set{ \hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi$ distinguishes $p$ from $Q \neq \varnothing$
  and the processes in $Q$ are stable,
  then $\expr[\varepsilon](\hmlands \set{ \hmlneg\hmlobs{\tau}\hmltrue } \cup \Psi) \in \attackerwins(\defenderpos[s]{p,Q})$;
6. If $\hmlands \set{ \hmlopt{\alpha}\varphi' } \cup \Psi$ distinguishes $p$ from $Q$,
  then, for any $p \step{\hmlopt\alpha} p' \in \semantics{\varphi'}$ and $Q_\alpha = Q \setminus \semantics{\hmlobs{\alpha}\varphi'}{}{}$, $\expr[\varepsilon](\hmlands \set{ \hmlopt{\alpha}\varphi'\! } \cup \Psi) \in \attackerwins(\defenderpos[\eta]{p,\alpha,p'\!,Q \setminus Q_\alpha, Q_\alpha})$. \qedhere
:::

::: {#thm-weak-spectroscopy-game-characterization}
For all $e \in \energies_\infty$, $p \in \states$, $Q \in \powerset{\states}$, the following are equivalent:{{<isb theorem Silent_Step_Spectroscopy weak_spectroscopy_game.spectroscopy_game_correctness>}}

- There exists a formula $\varphi \in \hmlsrbb$ with price $\expr[\literal{weak}](\varphi) \leq e$ that distinguishes $p$ from $Q$.
- Attacker wins $\gamespectroscopyw^{\system}$ from $\attackerpos{p,Q}$ with $e$ (that is, $e \in \attackerwins^{\gamespectroscopyw^{\system}}(\attackerpos{p,Q})$).
:::

### Isabelle/HOL Formalization {#sec-isabelle-formalization}

@bbhlmm2025weakSpectroscopyIsabelle formalize the correctness result for the weak spectroscopy game in the interactive proof assistant Isabelle/HOL. 
The preceding definitions and facts have already linked to their respective Isabelle/HOL counterparts.
This subsection is devoted to providing some insights into the formalization.^[
  For questsions on the Isabelle/Isar language, consult “The Isabelle/Isar Reference Manual” [@wenzel2025isabelleIsar].
]
We take a tour through roughly hundred of the most interesting lines of the 6500 line theory development.

TODO: Maybe overview figure.

The weak spectroscopy game (@def-weak-spectroscopy-game) is modelled through a *parametric datatype* `('s, 'a) spectroscopy_position` for its positions and a *partial function* to determine the moves connecting them `spectroscopy_moves`.^[
  To be precise: “Partial function” here means that it returns `option`-values, which might either be `Some x` with an output or `None` otherwise.
  All functions in higher order logic are *total*.
]
The parameter types `'s` and `'a` capture the states $\states$ and actions $\actions$ of the transition system on which we operate.

```isabelle
datatype ('s, 'a) spectroscopy_position =
  Attacker_Immediate
    (attacker_state: ‹'s›) (defender_states: ‹'s set›)
| Attacker_Delayed
    (attacker_state: ‹'s›) (defender_states: ‹'s set›)
  [...]
| Defender_Branch
    (attacker_state: ‹'s›) (attack_action: ‹'a›)
    (attacker_state_succ: ‹'s›)
    (defender_states: ‹'s set›)
    (defender_branch_states: ‹'s set›)

fun spectroscopy_moves (in LTS_Tau) ::
  ‹('s, 'a) spectroscopy_position ⇒ ('s, 'a) spectroscopy_position
    ⇒ energy update option›
where
  delay: ‹spectroscopy_moves
    (Attacker_Immediate p Q) (Attacker_Delayed p' Q')
  = (if p' = p ∧ Q ↠S Q' then id_up else None)›
| [...]
```

The game itself is then built as a combination of the *locale* for transition systems with internal actions `LTS_Tau` (with a tranistion relation `step`)
and an `energy_game`, instantiated with the moves, a predicate `spectroscopy_defender` singling out defender positions, and the $\leq$-relation on 8-dimensional energies.

```isabelle
locale weak_spectroscopy_game =
  LTS_Tau step τ
  + energy_game ‹spectroscopy_moves› ‹spectroscopy_defender› ‹(≤)›
  for step :: ‹'s ⇒ 'a ⇒ 's ⇒ bool› (‹_ ↦_ _› [70, 70, 70] 80)
    and  τ :: 'a
```

Within the locale, we can establish our correctness results.

The strategy formulas $\stratweak$ appear as three mutually *inductive predicates*,
because the grammar of $\hmlsrbb$ (@def-hml-srbb) is implemented as three mutually recursive datatypes (one per nonterminal).

```isabelle
inductive
  strategy_formula :: ‹('s, 'a) spectroscopy_position
    ⇒ energy ⇒ ('a, 's) hml_srbb ⇒ bool›
and
  strategy_formula_inner :: ‹('s, 'a) spectroscopy_position
    ⇒ energy ⇒ ('a, 's) hml_srbb_inner ⇒ bool›
and
  strategy_formula_conjunct :: ‹('s, 'a) spectroscopy_position
    ⇒ energy ⇒ ('a, 's) hml_srbb_conjunct ⇒ bool›
where
  delay: ‹strategy_formula (Attacker_Immediate p Q) e (Internal χ)›
  if ‹∃Q'. spectroscopy_moves
        (Attacker_Immediate p Q) (Attacker_Delayed p Q') = id_up
      ∧ attacker_wins e (Attacker_Delayed p Q')
      ∧ strategy_formula_inner (Attacker_Delayed p Q') e χ›
| [...]
```

We then reproduce the induction of @lem-weak-spectroscopy-game-formulas on attacker winning budgets in the following lemma.
For this, the theory uses the inductive characterization of $\attackerwins$ in @prp-winning-budget-rules as definition for `attacker_wins`.

```isabelle
lemma winning_budget_implies_strategy_formula:
  assumes ‹attacker_wins e g›
  shows
    ‹case g of
        Attacker_Immediate p Q ⇒
        ∃φ. strategy_formula g e φ ∧ expressiveness_price φ ≤ e
      | Attacker_Delayed p Q ⇒
        ∃χ. strategy_formula_inner g e χ ∧ expr_pr_inner χ ≤ e
      | Attacker_Conjunct p q ⇒
        ∃ψ. strategy_formula_conjunct g e ψ
          ∧ expr_pr_conjunct ψ ≤ e
      | Defender_Conj p Q ⇒
        ∃χ. strategy_formula_inner g e χ ∧ expr_pr_inner χ ≤ e
      | Defender_Stable_Conj p Q ⇒
        ∃χ. strategy_formula_inner g e χ  ∧ expr_pr_inner χ ≤ e
      | Defender_Branch p α p' Q Qa ⇒
        ∃χ. strategy_formula_inner g e χ ∧ expr_pr_inner χ ≤ e
      | Attacker_Branch p Q ⇒
        ∃φ. strategy_formula
              (Attacker_Immediate p Q) (e - E 1 0 0 0 0 0 0 0) φ
          ∧ expressiveness_price φ ≤ e - E 1 0 0 0 0 0 0 0›
  using assms
proof (induction rule: attacker_wins.induct)
  [...]
```

The (mutual) induction on the formula structure to establish the distintiveness of $\stratweak$-formulas of @lem-weak-spectroscopy-game-soundness begins:

```isabelle
lemma strategy_formulas_distinguish:
  ‹(strategy_formula g e φ ⟶
      (case g of
        Attacker_Immediate p Q ⇒
          distinguishes_from φ p Q
      | Defender_Conj p Q ⇒
          distinguishes_from φ p Q
      | _ ⇒ True))
    ∧
    (strategy_formula_inner g e χ ⟶
      (case g of
        Attacker_Delayed p Q ⇒
          (Q ↠S Q) ⟶ distinguishes_from (Internal χ) p Q
      | Defender_Conj p Q ⇒
          hml_srbb_inner.distinguishes_from χ p Q
      | Defender_Stable_Conj p Q ⇒
          (∀q. ¬ p ↦ τ q)
          ⟶ hml_srbb_inner.distinguishes_from χ p Q
      | Defender_Branch p α p' Q Qa ⇒
          (p ↦a α p')
          ⟶ hml_srbb_inner.distinguishes_from χ p (Q∪Qa)
      | _ ⇒ True))
    ∧
    (strategy_formula_conjunct g e ψ ⟶
      (case g of
        Attacker_Conjunct p q ⇒
          hml_srbb_conj.distinguishes ψ p q
      | _ ⇒ True))›
proof (induction rule:
  strategy_formula_strategy_formula_inner_[...].induct)
  [...]
```

For the other direction, the following expresses @lem-weak-spectroscopy-game-completeness that attacks for formulas.

```isabelle
lemma distinction_implies_winning_budgets:
  assumes ‹distinguishes_from φ p Q›
  shows ‹attacker_wins (expressiveness_price φ)
                       (Attacker_Immediate p Q)›
```

The main theorem @thm-weak-spectroscopy-game-characterization is built by combining the previous facts and the upward-closedness of attacker winning budgets `win_a_upwards_closure`.
This is quite straightforward.
I reproduce it here in full to provide some idea of what Isar proofs look like.

```isabelle
theorem spectroscopy_game_correctness:
  shows
    ‹(∃φ. distinguishes_from φ p Q ∧ expressiveness_price φ ≤ e)
    ⟷ attacker_wins e (Attacker_Immediate p Q)›
proof
  assume
    ‹∃φ. distinguishes_from φ p Q ∧ expressiveness_price φ ≤ e›
  then obtain φ where φ_spec:
    ‹distinguishes_from φ p Q› ‹expressiveness_price φ ≤ e›
    by blast
  from distinction_implies_winning_budgets φ_spec(1) have
    ‹attacker_wins
      (expressiveness_price φ) (Attacker_Immediate p Q)› .
  thus ‹attacker_wins e (Attacker_Immediate p Q)›
    using win_a_upwards_closure φ_spec(2) by simp
next
  assume ‹attacker_wins e (Attacker_Immediate p Q)›
  with winning_budget_implies_strategy_formula have
    ‹∃φ. strategy_formula (Attacker_Immediate p Q) e φ
       ∧ expressiveness_price φ ≤ e›
    by force
  hence
    ‹∃φ. strategy_formula (Attacker_Immediate p Q) e φ
       ∧ expressiveness_price φ ≤ e›
    by blast
  thus ‹∃φ. distinguishes_from φ p Q ∧ expressiveness_price φ ≤ e›
    using strategy_formulas_distinguish by fastforce
qed
```

### Complexity

The complexity for spectroscopy using the weak game is quite comparable to the strong spectroscopy (@thm-strong-spectroscopy-complexity).

::: {#thm-weak-spectroscopy-complexity}
Given a transition system $\system$,
the spectroscopy problem for the $\notions^\literal{weak}$-spectrum can be solved by the game approach in exponential time and space with respect to the state space size $\relsize{\states}$.
:::
:::proof
According to @thm-weak-spectroscopy-game-characterization, we can solve the spectroscopy problem for the $\notions^\literal{weak}$-spectrum by deciding the winning budgets of the weak spectroscopy game ${\gamespectroscopyw}^{\system}$ on $\system=(\states,\actions,\step{})$.
We instantiate the winning budget complexity of @lem-declining-update-complexity for the case $d=8$ with the size of $\gamespectroscopyw$ according to @def-weak-spectroscopy-game.

The amount of attacker positions $\attackerpos{\dots}$ (and their delayed $\attackerpos[\varepsilon]{\dots}$ and branching $\attackerpos[\eta]{\dots}$ variants) is bounded by $\relsize{\states} \cdot 2^{\relsize{\states}}$.
The number of conjunction moves and defender conjunction positions $\defenderpos{\dots}$ is bounded by $\relsize{\states} \cdot 2^{\relsize{\states}}$, also for the stable variant $\defenderpos[d]{\dots}$.

However, for the branching conjunction moves, we find a bound of $\bigo{\relsize{\step{}} \cdot 2^{\relsize{\states}}}$ per attacker delayed position (which is a slight over-approximation).
Collectively, these moves reach $\bigo{\relsize{\step{}} \cdot 3^{\relsize{\states}}}$ defender branching positions $\defenderpos[\eta]{p, \alpha, p', Q \setminus Q_\alpha, Q_\alpha}$, due the three-coloring of states into $Q \setminus Q_\alpha$, $Q_\alpha$ and $\states \setminus Q$.

The maximal out-degree for attacker delayed positions of $\bigo{\relsize{\step{}} \cdot 2^{\relsize{\states}}}$ dominates that of other positions, in particular, of defender conjunction, stable conjunction, and branching positions with $\bigo{\relsize{\states}}$ outgoing options.

This amounts to $o_{\gamemoveblank_\nabla}$ in $\bigo{\relsize{\step{}} \cdot 2^{\relsize{\states}}}$ and to $\relsize{G_{\nabla}}$ in $\bigo{\relsize{\step{}} \cdot 3^{\relsize{\states}}}$.

Inserting the parameters in the time bounds of @lem-declining-update-complexity yields:
$$
\begin{array}{rlccccccc}
    & O( & o_{\gamemoveblank} & \cdot & \relsize{G}^{2d} & \cdot & (d^2 + \relsize{G}^{d-1} \cdot d) & ) \\
  = & O( & (\relsize{\step{}} \cdot 2^{\relsize{\states}}) & \cdot & (\relsize{\step{}} \cdot 3^{\relsize{\states}})^{2 \cdot 8} & \cdot & (8^2 + (\relsize{\step{}} \cdot 3^{\relsize{\states}})^{8-1} \cdot 8) & ) \\
  = & O( & \relsize{\step{}} \cdot 2^{\relsize{\states}} & \cdot & \relsize{\step{}}^{16} \cdot 3^{16\relsize{\states}} & \cdot & \relsize{\step{}}^7 \cdot 3^{7\relsize{\states}} & ) \\
  ⊆ & O( & \relsize{\step{}}^{24} & \cdot & 3^{24\relsize{\states}} & ).
\end{array}
$$
For space complexity, we arrive at $\bigo{ \relsize{\step{}}^8 \cdot 3^{8\relsize{\states}}}$.
:::

## Variants

### Optimization of Branching Conjunctions

### Covering Decorated Traces

### Handling Congruences

## Tackling Our Case Studies

## Discussion

- Mention to add back in strong observations