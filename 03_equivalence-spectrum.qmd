::: {.content-hidden when-format="pdf"}
{{< include style/macros.md >}}
:::

# Context: The Spectrum of Equivalences {#sec-spectrum}

We will now take a deeper dive into how groups of behavioral equivalences and preorders can be ranked in equivalence spectra.

For the following chapters, we will focus on the main “linear-time--branching-time spectrum“ for the semantics of concrete processes treated by @glabbeek1990ltbt1, the so-called “strong spectrum.”
However, we will order the equivalences using the approach of parameterized *notions of observability* from the later @glabbeek1993ltbt.

The first core idea of this chapter is:

::: {#nte-idea-hierarchy .callout-idea .callout-note}
#### Notions of observability bring order

Groups of equivalences can be defined and ranked in lattices of notions of observability.
:::

\noindent
In particular, @sec-ltbt-spectrum will introduce such a spectrum, forming a hierarchy of modal logics for the *strong spectrum*.

From there, we will quickly run into the second core idea:

::: {#nte-idea-spectroscopy .callout-idea .callout-note}
#### We have a Spectroscopy problem

We can ask what equivalences from a spectrum are the most fitting to relate two states.
:::

\noindent
@sec-spectroscopy will define the problem formally and give lower-bounds for its complexity on the strong spectrum.

## Observability Hierarchies

Let us begin to pick up the idea from Subsection [-@sec-perks-modal-characterizations] that modal logics can nicely rank equivalences.
The intuition is that $\hml$ sublogics capture what we consider to be *observable*.
The more we mark as observable, the finer the resulting equivalence relations do become.

### Understanding the Equivalence Hierarchy through Modal Logics

As promised, we revisit the hierarchy between bisimilarity, similarity, and trace equivalence of Subsection [-@sec-hierarchy-equivalences], modally.
So far, we have only looked into the characterization of bisimilarity through the whole of $\hml$ in @thm-hennessy-milner or through $\observations{\floor{B}}$ in @exm-game-formulas.

::: {#def-sim-trace-logics}

We define the two $\hml$-sublogics $\observations{T}$, the linear positive fragment, and $\observations{S}$, the positive fragment, by the grammars starting at $φ^\mathrm{T}$ and $φ^\mathrm{S}$.

$$
\begin{array}{rclll}
  φ^\mathrm{T} & \grammardef &
    \hmlobs{α}φ^\mathrm{T}
    & \grammaror & \hmltrue \\
  φ^\mathrm{S} & \grammardef &
    \hmlobs{α}φ^\mathrm{S}
    & \grammaror & \hmland{i}{I}\hmlobs{α_i}φ^\mathrm{S}_i
\end{array}
$$
:::

{{<noindent>}} The logics characterize trace and simulation preorder (and equivalence):

::: {#lem-trace-logics}
$p \bpreord{T} q$ precisely if $p \bpreordvar{\observations{T}} q$.{{<isb theorem HML_Spectrum lts.observations_traces_characterizes_trace_preorder>}}
:::

::: {#lem-sim-logics}
$p \bpreord{S} q$ precisely if $p \bpreordvar{\observations{S}} q$.{{<isb theorem HML_Spectrum lts.observations_simulation_characterize_simulation_preorder>}}
:::

{{<noindent>}} Clearly, $\observations{T} \subset \observations{S} \subset \hml$.
So, @prp-difference-contraposition that sublogics will equate at least as much as their parent logic, yields another way of establishing the entailment hierarchy between bisimilarity, similarity, and trace equivalence of Subsection [-@sec-hierarchy-equivalences].^[Taking the two previous lemmas together with @thm-hennessy-milner for $\beq{B}$ and $\hml$.]

While the relational definitions for (bi-)similarity of @def-bisimilarity and the denotational definition of trace equivalence @def-trace-eq live in different worlds, the two equivalences become naturally comparable in the modal realm.

The modal view also reveals an intuitive hierarchy of “testing scenarios” for the equivalences, framed as black box tests:

Trace equivalence
: matches an observer that can see *sequences of events*.
They *just watch repeated executions* of the program, but are oblivious to possibilities and decisions.

Similarity
: matters to an experimenter that can also explore different *branches of possibilities*.
This is valid if the experimenter can somehow *copy the system state* during the execution.

Bisimilarity
: captures that the experimenter can moreover determine if a future course of events is *impossible at some point*.
This means that the experimenter can not only copy the execution state but also exhaustively test *every* possibility of how the system may continue.

\noindent
But such levels of observability do not need to be linear, as we will see in the next subsection …

### Incomparabilities {#sec-incomparabilities}

A well-known and natural notion of equivalence is that of *failure equivalence*.
Intuitively, a failure says that the experimenter may follow a trace and see which actions are *impossible* at its end.
Its standard definition is based on *failure* denotations:

::: {#def-failures}
#### Failures

The set of failures of a process $\failures{p}$ is recursively defined as

- $(\emptyword, X) ∈ \failures{p}$ if $X \cap \initials{p} = \varnothing$,
- $(α \cdot \vec w, X) ∈ \failures{p}$ if there is $p'$ with $p \step α p'$ and $(\vec w, X) ∈ \failures{p'}$.
:::

\noindent
For instance, the failure $(\tau, \set{\literal{a}})$ is in $\failures{\literal{P}}$ but not in $\failures{\literal{Q}}$ on @fig-ts-determinism.

But would it not be nice if we could prevent the invention of new mathematical objects as denotations for every new notions of observability we consider?
Fortunately, we can save the work, by directly employing modal logics:

::: {#def-failures-modal}

We define failure observations $\observations{F}$ by the grammar:
$$
  φ^\mathrm{F} \grammardef
    \hmlobs{α}φ^\mathrm{F}
    \quad\grammaror\quad
    \hmland{i}{I} \hmlneg \hmlobs{α_i}\hmltrue 
$$
:::

\noindent
Clearly, this encompasses what we may observe via traces,
but is something that we cannot observe using simulation.
We consider $\bpreord{F}$ given by $\bpreordvar{\observations{F}}$.

The distinguishing failure $(\tau, \set{\literal{a}})$ can be as $\hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\hmltrue} \in \observations{F}$ in HML.
The formula distinguishes $\literal P$ from $\literal Q$ on @fig-ts-determinism, but $\literal P \bpreord{S} \literal Q$ (cf. @exm-phil-sim).
On the other hand, no failure from $\observations{F}$, distinguishes $\literal Q$ from $\literal P$, but $\literal Q \nbpreord{S} \literal P$.

:::: {#fig-failure-hierarchy .column-margin}
```{mermaid}
%%| fig-width: 2
  flowchart TD
    B["Bisimilarity"] --> S["Similarity"] --> T["Trace Equivalence"]
    B --> F["Failure Equivalence"] --> T
  ```

  Preorder/equivalence hierarchy.
::::

As a consequence, simulation preorder and failure preorder are *incomparable*, that is, neither one implies the other.
The same is true of the corresponding equivalences: similarity and failure equivalence.
The situation is summed up by the non-linear hierarchy in @fig-failure-hierarchy.
After a quick glance at the diamond-like figure, it probably comes as no surprise, what kind of mathematical structure we employ to handle the hierarchy: Lattices.

### Lattices

To handle non-linearity, we will be working with lattices of notions of behavioral equivalence.
The following definition gives the preliminaries to talk about this kind of partial orders.

::: {#def-lattice}

#### Lattices, Bounds, Chains

A *lattice* is a partially ordered set $(B, \leq)$, where there are greatest lower bounds $\inf\set{b_1, b_2}$ and least upper bounds $\sup\set{b_1, b_2}$ between each pair of elements $b_1, b_2 \in B$.

The *greatest lower bound* of a set $B' \subseteq B$ is called its *infimum*, $\inf B'$.
It refers to the greatest element $b \in B$ such that $b \leq b'$ for all $b' \in B'$.^[
  Note that not necessarily $b \in B'$!
]

Dually, the *least upper bound* of a set $B' \subseteq B$ is called its *supremum*, $\sup B'$.
It refers to the least element $b \in B$ such that $b \geq b'$ for all $b' \in B'$.

For the pair-wise infimum we also use infix notation $b_1 \glb b_2 = \inf \set{b_1, b_2}$, and analogously $b_1 \lub b_2 = \sup \set{b_1, b_2}$.

If a lattice $(B, \leq)$ not only allows infima and suprema for pairs but for any set $B' \subseteq B$, it is called *complete*.
We say $\glb$-complete or $\lub$-complete if only one of the two is true.

We call totally ordered subset $B' \subseteq B$ a *chain*.

Dually, some $B' \subseteq B$ with no two elements $b_1, b_2 \in B'$ such that $b_1 \leq b_2$ is called an *anti-chain*.
:::

::: {#fig-set-lattice .column-margin}

```tikz
\begin{tikzpicture}[auto,node distance=2.5cm,align=center]
  \node (B123){$\set{1,2,3}$};
  \node (B13)[below of=B123]{$\set{1,3}$};
  \node (B12)[left of=B13]{$\set{1,2}$};
  \node (B23)[right of=B13]{$\set{2,3}$};
  \node (B2)[below of=B13]{$\set{2}$};
  \node (B1)[left of=B2]{$\set{1}$};
  \node (B3)[right of=B2]{$\set{3}$};
  \node (Bnil)[below of=B2]{$\varnothing$};
  
  \path
  (B123)
    edge (B12)
    edge (B13)
    edge (B23)
  (B12)
    edge (B1)
    edge (B2)
  (B13)
    edge (B1)
    edge (B3)
  (B23)
    edge (B2)
    edge (B3)
  (B1)
    edge (Bnil)
  (B2)
    edge (Bnil)
  (B3)
    edge (Bnil);
  \path[dotted, thick, blue, transform canvas={xshift=1mm}]
    (B123) edge (B12)
    (B12) edge (B1)
    (B1) edge (Bnil);
  \path[dashed, thick, red]
    (B1) edge (B2)
    (B2) edge (B3);
\end{tikzpicture}
```

Lattice of subsets from @exm-set-lattice.
:::

::: {#exm-set-lattice}
#### Subset Lattice

Given any set $B$, its subsets and ordered by set inclusion, $(\powerset{B}, {\subseteq})$, form a complete lattice.

The *greatest lower bound* is given by set intersection $\bigcap B'$ with $B' \subseteq B$.
The *least upper bound* is set union $\bigcup B'$ with $B' \subseteq B$.
$\varnothing \in \powerset{B}$ is the least element, $B \in \powerset{B}$ is itself the greatest bound.

Consider the subset lattice over $B = \set{1,2,3}$.
It is “cube-like,” as can be seen in its Hasse diagram in @fig-set-lattice.
An example of a (maximal) chain would be $\set{\varnothing, \set{1}, \set{1,2}, B}$ (the nodes connected by a blue dotted line in the figure), because its members are ordered linearly $\varnothing \subset \set{1} \subset \set{1,2} \subset B$.
$\set{\set{1}, \set{2}, \set{3}}$ forms a (maximal) anti-chain (the nodes connected by a red dashed line in the figure), because its members do not include each other.
Their respective subsets are chains / anti-chains as well.
:::

::: {#fig-nat-lattice .column-margin}
```tikz
\begin{tikzpicture}[]
  \begin{scope}[rotate=45, scale=1]
    \draw[help lines] (0,0) grid (2.5,2.5);
    \draw (-.25,-.25) node {$(0,0)$};
    \draw (1,-.25) node {$1$};
    \draw (2,-.25) node {$2$};
    \draw (-.25,1) node {$1$};
    \draw (-.25,2) node {$2$};
    \node[gray] (NInf0) at (3.4,0) {$(\infty, 0)$};
    \node[gray] (N0Inf) at (0,3.4) {$(0, \infty)$};
    \node[gray] (NInfInf) at (3.4,3.4) {$(\infty, \infty)$};
    \path[dotted, gray]
      (2.5,0) edge (NInf0)
      (0,2.5) edge (N0Inf)
      (N0Inf) edge (NInfInf)
      (NInf0) edge (NInfInf);
  \end{scope}
\end{tikzpicture}
```

Visualization of the infinitary grid of $\nats^2$ (and in gray, $\natsext^2$) in @exm-nat-lattice.
:::

::: {#exm-nat-lattice}
#### Vector Lattice

Given linearly-ordered set $(B, \leq_B)$, its $n$-ary Cartesian product with pointwise order $(B^n, \leq)$ forms a lattice, where $b \leq b'$ iff $b_k \leq b'_k$ for all $k \in \set{1, …, n}$.
Greatest lower bounds and least upper bounds can be transferred pointwisely from $B$.

For instance, pairs of natural numbers, $(\nats^2, \leq)$, form a lattice, as visualized in @fig-nat-lattice.
It is $\glb$-complete, that is, for any set from $\nats^2$, one can pick a greatest lower bound.
However, the lattice is not $\lub$-complete: For instance, the set $\nats \times \set{0}$ has no upper bound.
If we take the natural numbers extended with an upper bound $\infty$, $\natsext$, as basis, then $(\natsext^2, \leq)$ forms a complete lattice.
:::

## The Linear-Time–Branching-Time Spectrum {#sec-ltbt-spectrum}

Van Glabbeek's two papers on the “linear-time--branching-time spectrum” [-@glabbeek2001ltbtsiReport;-@glabbeek1993ltbt] show how all common equivalences can be understood to form a lattice of sublanguages of $\hml$ (and a variant of $\hml$ for equivalences with silent steps).
His hierarchy of equivalences derives from a hierarchy of *notions of observability*.^[
  In particular, the weak spectrum [@glabbeek1993ltbt] makes this really formal.
]
We will introduce a similar construction: at first, in a generic form, then for the strong spectrum of @glabbeek2001ltbtsiReport.

### Spectra as Observability Lattices

As we will discuss various equivalence spectra (van Glabbeek [-@glabbeek2001ltbtsiReport;-@glabbeek1993ltbt] already gives two different ones), let us first introduce an abstract description of such spectra.

::: {#def-spectrum}
#### Equivalence Spectrum

An *equivalence spectrum* $(\notions, \leq, \observationsvar{N \in \notions})$ consists of

- a lattice of notions of observability, $\notions$, partially ordered by ${\leq} \subseteq \notions \times \notions$, and
- corresponding logics $\observationsvar{N} \colon \powerset{\hml}$ for $N \in \notions$.

\noindent
$\observationsvar{N \in notions}$ must be monotonic, that is:
for any two notions $N,M \in \notions$, it holds that
$$N \leq M \text{ implies } \observationsvar{N} \subseteq \observationsvar{M}.$$
:::

\noindent
Let us use our new definition to construct a subset lattice as in @exm-set-lattice to recreate the hierarchy of @fig-failure-hierarchy.

::: {#exm-simple-spectrum}

Consider the notions
$$\notions^\literal{simple} ≔
\powerset{\set{\literal{(\land)}, \literal{(\neg)} }},
$$
ordered by subset inclusion,
and the family of observation languages $\observationsvar{N \in \notions^\literal{simple}}$ given by the family of grammars with some conditional productions:

$$
\begin{array}{rcll}
  φ^N & \grammardef & \hmltrue{} & \\
      & \grammaror  & \hmlobs{α}φ^N & \\
      & \grammaror  & \hmland{i}{I}φ^N_i & \text{ if $\literal{(\land)} \in N$} \\
      & \grammaror  & \hmland{i}{I} \hmlneg \hmlobs{α_i}\hmltrue & \text{ if $\literal{(\neg)} \in N$} \\
      & \grammaror  & \hmlneg φ^N & \text{ if $\set{\literal{(\land)}, \literal{(\neg)} } = N$.}
\end{array}
$$

{{<noindent>}} Clearly, $N \subseteq M$ implies $\observationsvar{N} \subseteq \observationsvar{M}$ for $N, M \in \notions^\literal{simple}$.
We obtain the diamond hierarchy of @fig-sample-hierarchy.
It matches the diamond of @fig-failure-hierarchy, but this time, the hierarchy is an effect of the ordered notions.

:::: {#fig-sample-hierarchy .column-margin}
```{mermaid}
%%| fig-width: 2
flowchart TD
  B["Bisimilarity <br> {(∧), (¬)}"] --- S["Similarity <br> {(∧)}"] --- T["Trace Equivalence <br> ∅"]
  B --- F["Failure Equivalence <br> {(¬)}"] --- T
```

Hierarchy of simple notions of equivalence.
::::
:::

\noindent
While the incomparable languages of [Subsection -@sec-incomparabilities] form no lattice, e.g. $\observations{S} \cup \observations{F} \neq \hml$, the incomparable notions of the present @exm-simple-spectrum do form a lattice, as $\set{\literal{(\land)}} \cup \set{\literal{(\neg)}} = \set{\literal{(\land)}, \literal{(\neg)}}$.
This is one of the reasons why it is convenient to add *notions of observability* as an abstraction layer.

We can also ask what the least notion is to include a specific formula:

::: {#def-expressiveness-price}

#### Syntactic Expressiveness Price

In the context of a $\glb$-complete spectrum $(\notions, \leq, \observationsvar{N \in \notions})$, the *syntactic expressiveness price* of a formula $\varphi$ that appears in one of the logics is defined as
$$\expr(\varphi) := \inf \set{N \in \notions \mid \varphi \in \observationsvar{N}}.$$
:::

\noindent
Thinking of the lattice of notions as a hierarchy of how difficult it is to tell processes apart, we consider this as a kind of “price tag” to put on formulas depending on their syntactic complexity.
Higher syntactic complexity allows formula sets of higher expressiveness.

In this view, a trace formula is *cheaper* than a failure formula.
Using @exm-simple-spectrum: $\expr(\hmlobs{\tau}\hmlobs{\literal a}) = \varnothing \subset \set{(\neg)} = \expr(\hmlobs{\tau} \hmlands\set{\hmlneg\hmlobs{\literal{a}}})$, which captures that we need a strictly smaller part of the grammar to construct the trace formula.

### The Strong Notions of Observability

Now we can approach the *strong spectrum*.
We will encode its notions as a $\natsext$-vector lattice as in @exm-nat-lattice.
To cover all common behavioral preorders, we use six dimensions, counting certain syntactic features of $\hml$-formulas:

1. Formula modal depth of observations.
2. Formula nesting depth of conjunctions.
3. Maximal modal depth of deepest positive clauses in conjunctions.
4. Maximal modal depth of the other positive clauses in conjunctions.
5. Maximal modal depth of negative clauses in conjunctions.
6. Formula nesting depth of negations.

::: {#def-strong-spectrum}
#### Strong Spectrum

We define the *strong notions of observability* using vectors of extended naturals
$$\notions^\literal{strong} ≔
\natsext^6,
$$
ordered by pointwise comparison of vector components,
and the family of strong observation languages $\observationsvar{N \in \notions^\literal{strong}}^\literal{strong}$ given by the parameterized grammar starting from $φ^N$:{{<isb primrec Priced_HML formula_of_price>}}

$$
\begin{array}{rcll}
  φ^N & \grammardef & \hmltrue{} & \\
      & \grammaror  & \hmlobs{α}φ^{N - \unit{1}} & \\
      & \grammaror  & \hmlands\set{ψ^{N-\unit{2}},
        ψ^{(N-\unit{2}) \sqcap (\infty, \infty, N_4, \infty, \infty, \infty)},
        ψ^{(N-\unit{2}) \sqcap (\infty, \infty, N_4, \infty, \infty, \infty)}, \ldots} & \\
  ψ^N & \grammardef &
      \hmlobs{α}φ^{(N \sqcap (N_3, \infty, \infty, \infty, \infty, \infty)) - \unit{1}} & \\
      & \grammaror  &
      \hmlneg \hmlobs{α}φ^{(N \sqcap (N_5, \infty, \infty, \infty, \infty, \infty))- \unit{1} - \unit{6}} & \\
\end{array}
$$

{{<noindent>}} The productions only exist if the respective recursive invocations are defined on the domain of notions.
For instance, $φ^N \leadsto \hmlobs{α}φ^{N - \unit{1}}$ is no valid production for $N=(0,1,0,0,0,0)$ because $(-1,1,0,0,0,0) \notin \notions^\literal{strong}$.
:::

::: {#exm-formula-language}
The smallest notion to cover the failure formula of Subsection [-@sec-incomparabilities] would be $(2,1,0,0,1,1)$, that is, 
$$\hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\hmltrue} \in \observationsvar{(2,1,0,0,1,1)^\literal{strong}}.$$
This is because the formula has two levels of modal observations, where the inner one is negated.
The negation is wrapped in a conjunction with no positive clauses.
A visualization for how $\expr^\literal{strong}(\hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\hmltrue}) = (2,1,0,0,1,1)$ (according to @def-expressiveness-price) comes together is given in the upcoming @fig-formula-pricing.
Formally, the reason is that the following derivation is optimal:
$$
\begin{array}{rcl}
\varphi^{(2,1,0,0,1,1)} & \leadsto & \hmlobs{τ}\varphi^{(1,1,0,0,1,1)} \\
                        & \leadsto & \hmlobs{τ}\hmlands\set{\psi^{(1,0,0,0,1,1)}} \\
                        & \leadsto & \hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\varphi^{(0,0,0,0,1,0)}} \\
                        & \leadsto & \hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\hmltrue}.
\end{array}
$$
If we reexamine the grammar of $\observations{F}$ in @def-failures-modal, we notice that the formulas it can produce match those of $\observationsvar{(\infty,1,0,0,1,1)}^\literal{strong}$ of the strong spectrum in @def-strong-spectrum.
:::

::: {#fig-formula-pricing}
```tikz
\definecolor{obsColor}{RGB}{218, 0, 99}
\definecolor{conjColor}{RGB}{242, 75, 42}
\definecolor{mainPosColor}{RGB}{200, 180, 0}
\definecolor{otherPosColor}{RGB}{143, 209, 79}
\definecolor{negObsColor}{RGB}{18, 205, 212}
\definecolor{negsColor}{RGB}{101, 44, 179}

\begin{tikzpicture}
  \node(Obs1) {$\hmlobs\tau$};
  \node(Conj0)[right=2cm of Obs1.center] {$\land$};
  \node(Neg)[right=3cm of Conj0.center] {$\neg$};
  \node(ObsA)[right=2cm of Neg.center] {$\hmlobs{a}$};
  \node(Top)[right=2cm of ObsA.center] {$\top$};

  \node(E1) [above left=6mm and 1mm of Obs1.center]{$e_{\textcolor{obsColor}{1}} = 2$};
  \node(E2) [above left=2mm and 1mm of Obs1.center]{$e_{\textcolor{conjColor}{2}} = 1$};
  \node(E5) [below right=2mm and 16mm of Conj0.center]{$e_{\textcolor{negObsColor}{5}} = 1$};
  \node(E6) [below left=2mm and 1mm of Obs1.center]{$e_{\textcolor{negsColor}{6}} = 1$};

  \draw[draw=obsColor] ([yshift=8mm]Obs1.center) circle[fill, radius=1pt] to ([yshift=8mm]Conj0.center) to ([yshift=8mm]ObsA.center) circle[fill, radius=1pt] to ([yshift=8mm]Top.center);
  \draw[draw=conjColor] ([yshift=4mm]Obs1.center) to ([yshift=4mm]Conj0.center) circle[fill, radius=1pt] to ([yshift=4mm]ObsA.center) to ([yshift=4mm]Top.center);
  \draw[draw=negObsColor] ([yshift=-2mm]Conj0) to[out=0,in=180] ([yshift=-4mm]Neg.center) to  ([yshift=-4mm]ObsA.center) circle[fill, radius=1pt] to ([yshift=-4mm]Top.center);
  \draw[draw=negsColor] ([yshift=-4mm]Obs1.center) to ([yshift=-4mm]Conj0.center) to[out=0,in=180] ([yshift=-8mm]Neg.center) circle[fill, radius=1pt] to ([yshift=-8mm]ObsA.center) to ([yshift=-8mm]Top.center);

  \draw[thick] (Obs1) to (Conj0) to (Neg) to (ObsA) to (Top);
\end{tikzpicture}
```

Pricing formula $\hmlobs{τ}\hmlands\set{\hmlneg\hmlobs{\literal a}\hmltrue}$ with syntactic expressiveness $e = (2,1,0,0,1,1)$.
:::

\noindent
An example for the pricing of a more complex tree-like formula is given in @fig-formula-pricing-complex.

::: {#fig-formula-pricing-complex}
```tikz
\definecolor{obsColor}{RGB}{218, 0, 99}
\definecolor{conjColor}{RGB}{242, 75, 42}
\definecolor{mainPosColor}{RGB}{200, 180, 0}
\definecolor{otherPosColor}{RGB}{143, 209, 79}
\definecolor{negObsColor}{RGB}{18, 205, 212}
\definecolor{negsColor}{RGB}{101, 44, 179}

\begin{tikzpicture}
  \node(Obs1) {$\hmlobs\tau$};
  \node(Conj0)[right=2cm of Obs1.center] {$\land$};
  \node(ObsEC1)[above right=1cm and 3cm of Conj0.center] {$\hmlobs{ec_A}$};
  \node(ObsLC1)[right=2cm of ObsEC1.center] {$\hmlobs{lc_A}$};
  \node(Top1)[right=2cm of ObsLC1.center] {$\top$};
  \node(ObsEC2)[right=3cm of Conj0.center] {$\hmlobs{\tau}$};
  \node(Top2)[right=2cm of ObsEC2.center] {$\top$};
  \node(Neg)[below right=1cm and 3cm of Conj0.center] {$\neg$};
  \node(NegObsEC)[right=2cm of Neg.center] {$\hmlobs{ec_B}$};
  \node(Top3)[right=2cm of NegObsEC.center] {$\top$};

  \node(E1) [above left=10mm and 1mm of Obs1.center]{$e_{\textcolor{obsColor}{1}} = 3$};
  \node(E2) [above left=6mm and 1mm of Obs1.center]{$e_{\textcolor{conjColor}{2}} = 1$};
  \node(E3) [above right=3mm and 0mm of Conj0.center]{$e_{\textcolor{mainPosColor}{3}} = 2$};
  \node(E4) [above right=3mm and 20mm of Conj0.center]{$e_{\textcolor{otherPosColor}{4}} = 1$};
  \node(E5) [below right=2mm and 20mm of Conj0.center]{$e_{\textcolor{negObsColor}{5}} = 1$};
  \node(E6) [below left=2mm and 1mm of Obs1.center]{$e_{\textcolor{negsColor}{6}} = 1$};

  \draw[draw=obsColor] ([yshift=12mm]Obs1.center) circle[fill, radius=1pt] to ([yshift=12mm]Conj0.center) to[out=0,in=180] ([yshift=12mm]ObsEC1.center) circle[fill, radius=1pt] to ([yshift=12mm]ObsLC1.center) circle[fill, radius=1pt] to ([yshift=12mm]Top1.center);
  \draw[draw=conjColor] ([yshift=8mm]Obs1.center) to ([yshift=8mm]Conj0.center) circle[fill, radius=1pt] to[out=0,in=180] ([yshift=8mm]ObsEC1.center) to ([yshift=8mm]ObsLC1.center) to ([yshift=8mm]Top1.center);
  \draw[draw=mainPosColor] ([yshift=2mm]Conj0) to[out=0,in=180] ([yshift=4mm]ObsEC1.center) circle[fill, radius=1pt] to ([yshift=4mm]ObsLC1.center) circle[fill, radius=1pt] to ([yshift=4mm]Top1.center);
  \draw[draw=otherPosColor] ([yshift=2mm]Conj0) to[out=0,in=180] ([yshift=4mm]ObsEC2.center) circle[fill, radius=1pt] to ([yshift=4mm]Top2.center);
  \draw[draw=negObsColor] ([yshift=-2mm]Conj0) to[out=0,in=180] ([yshift=4mm]Neg.center) to  ([yshift=4mm]NegObsEC.center) circle[fill, radius=1pt] to ([yshift=4mm]Top3.center);
  \draw[draw=negsColor] ([yshift=-4mm]Obs1.center) to ([yshift=-4mm]Conj0.center) to[out=0,in=180] ([yshift=-4mm]Neg.center) circle[fill, radius=1pt] to ([yshift=-4mm]NegObsEC.center) to ([yshift=-4mm]Top3.center);

  \draw[thick] (Obs1) to (Conj0) to[out=0,in=180] (ObsEC1) to (ObsLC1) to (Top1);
  \draw[thick] (Conj0) to (ObsEC2) to (Top2);
  \draw[thick] (Conj0) to[out=0,in=180] (Neg) to (NegObsEC) to (Top3);
\end{tikzpicture}
```

Pricing formula $\hmlobs{\tau}\hmlands\{\hmlobs{ec_A}\hmlobs{lc_A}\hmltrue, \hmlobs{\tau}\hmltrue, \hmlneg\hmlobs{ec_B}\hmltrue\}$ with syntactic expressiveness $e = (3,1,2,1,1,1)$.
:::


::: {#lem-spectrum-characterization}
The strong spectrum of @def-strong-spectrum contains the notions of behavioral equivalence we have discussed so far.

1. The observation language $\observationsvar{(\infty, 0, 0, 0, 0, 0)}^\literal{strong}$ exactly matches the characterization of traces $\observations{T}$ from @def-sim-trace-logics and thus characterizes trace preorder.{{<isb theorem Priced_Spectrum lts.traces_priced_characterization>}}
2. The observation language $\observationsvar{(\infty, \infty, \infty, \infty, 0, 0)}^\literal{strong}$ exactly matches the characterization of simulation observations $\observations{S}$ from @def-sim-trace-logics and thus characterizes simulation.{{<isb theorem Priced_Spectrum lts.simulation_priced_characterization>}}
3. The observation language $\observationsvar{(\infty, \infty, \infty, \infty,  \infty, \infty)}^\literal{strong}$ matches $\hml$ in distinctiveness and thus characterizes bisimilarity.
4. The observation language $\observationsvar{(\infty, 1, 0, 0, 1, 1)}^\literal{strong}$ exactly matches failure observations $\observations{F}$ of @def-failures-modal.
:::
::: {.proof}
The only non-trivial case is (3) for bisimilarity:

Observe that $\observations{\floor{B}} \subseteq \observationsvar{(\infty, \infty, \infty, \infty,  \infty, \infty)}^\literal{strong}$ by examining its grammar in @exm-game-formulas.
As $\observations{\floor{B}}$ already has complete $\hml$-distinctiveness by @lem-game-formula-hml, so must its superlogic $\observationsvar{(\infty, \infty, \infty, \infty,  \infty, \infty)}^\literal{strong}$.
:::

\noindent
So far, we have only established that the six-dimensional spectrum also covers the notions that @exm-simple-spectrum has already covered–in a more complicated way.
The extra dimensions will pay off in the next subsection.

### The Strong Linear-Time–Branching-Time Spectrum {#sec-full-spectrum}

Using the six dimensions of @def-strong-spectrum, we can assign coordinates to all other common notions of the strong linear-time--branching-time spectrum.

::: {#def-strong-ltbt-spectrum}
#### Strong Linear-Time–Branching-Time Spectrum

Coordinates with respect to the notions of @def-strong-spectrum for the common notions of behavioral equivalence and preorder in the strong linear-time–branching-time spectrum are given in @fig-strong-ltbt-spectrum.^[When writing vectors in labels and figures, we omit the parentheses $(\dots)$ for readability.]

::: {#fig-strong-ltbt-spectrum}

```tikz
\begin{tikzpicture}[auto,node distance=2.5cm,align=center]
  \node (B){bisimulation $\notionname{B}$\\$\infty,\infty,\infty,\infty,\infty,\infty$};
  \node (S2)[below of=B, node distance=1.2cm]{$2$-nested simulation $\notionname{2S}$\\$\infty,\infty,\infty,\infty,\infty,1$};
  \node (RS)[below left of=S2]{ready simulation $\notionname{RS}$~\\$\infty,\infty,\infty,\infty,1,1$};
  \node (RT)[below right of=RS]{readiness traces $\notionname{RT}$\\$\infty,\infty,\infty,1,1,1$};
  \node (FT)[below left of=RT]{failure traces $\notionname{FT}$\\$\infty,\infty,\infty,0,1,1$};
  \node (R)[below right of=RT]{readiness $\notionname{R}$\\$\infty,1,1,1,1,1$};
  \node (PF)[above right of=R]{~possible futures $\notionname{PF}$\\$\infty,1,\infty,\infty,\infty,1$};
  \node (IF)[below right of=R]{impossible futures $\notionname{IF}$\\$\infty,1,0,0,\infty,1$};
  \node (S)[left of=FT, node distance=3.8cm]{simulation $\notionname{1S}$\\$\infty,\infty,\infty,\infty,0,0$};
  \node (RV)[below left of=R]{revivals $\notionname{RV}$\\$\infty,1,1,0,1,1$};
  \node (F)[below right of=RV]{failures $\notionname{F}$\\$\infty,1,0,0,1,1$};
  \node (T)[below left of=F]{traces $\notionname{T}$\\$\infty,0,0,0,0,0$};
  \node (E)[below of=T, node distance=1.2cm]{enabledness $\notionname{E}$\\$1,0,0,0,0,0$};

  \path
  (B) edge (S2)
  (S2) edge (RS)
  (S2) edge (PF)
  (RS) edge (S)
  (RS) edge (RT)
  (RT) edge (R)
  (RT) edge (FT)
  (PF) edge (R)
  (PF) edge (IF)
  (S) edge (T)
  (FT) edge (RV)
  (R) edge (RV)
  (IF) edge (F)
  (RV) edge (F)
  (F) edge (T)
  (T) edge (E)
  ;
\end{tikzpicture}
```

Hierarchy of common equivalences/preorders ordered by observability coordinates.
:::
:::

\noindent
For the rest of the thesis, we will take the equivalences as defined by the coordinates as canonical.
@lem-spectrum-characterization has established that the coordinates of traces, simulation, failures, and bisimulation match the definitions one commonly finds in the literature.
To establish the same for the other notions, would mean a lot of (repetitive) definitions, which mostly reproduce van Glabbeek's survey [-@glabbeek2001ltbtsiReport].
@mattes2024expressivePowerHML proves in Isabelle/HOL that the coordinate system of the conference version of this spectrum [@bisping2023equivalenceEnergyGames] match distinctiveness of the modal characterizations in [@glabbeek2001ltbtsiReport].

::: {.callout-warning}
I might add such a marathon if there's strong popular demand.
:::

There are a few standard questions that come to mind for people who are familiar with the various spectra of equivalences when seeing @fig-strong-ltbt-spectrum.
The following remarks address these points.

::: {#rem-other-strong-notions}
#### Selection of Notions

At the core, we treat the same notions as @glabbeek2001ltbtsiReport.
But we feature a slightly more modern selection.

Our spectrum additionally includes strong versions of *impossible futures* (@vm2001impossible) and *revivals* (@roscoe2009revivalsHierarchy) as equivalences whose relevance has only been noted after the publication of @glabbeek2001ltbtsiReport.

On the other hand, we glimpse over completed trace, completed simulation, and possible worlds observations like @ke1999logicalProcessQuotients, who studied properties of “good” observation languages.
These notions would need a different HML grammar, featuring exhaustive conjunctions $\hmland{a}{\actions}\varphi_a$, where the $\varphi_a$ are deactivated actions for completed traces, and more complex trees for possible worlds.
<!-- While it could be provided for with additional operators, it would break the closure property of observation languages, without giving much in return.
For instance, for $\actions = \set{a,b}$, completed trace and completed simulation observations contain the observation $\hmlands\set{ \hmlneg\hmlobs{a}, \hmlneg\hmlobs{b} }$, but not its subformula $\hmlands\set{\hmlneg\hmlobs{a}}$.-->
:::

::: {#rem-ambiguous-coordinates}
#### Ambiguous Coordinates

For many of the logics in @fig-strong-ltbt-spectrum, there are multiple coordinates that characterize the same logic.
For instance, due to the second dimension (conjunctions) being set to $0$ for traces $\notionname{T}$, the higher dimensions do not matter and any coordinate $N = (\infty, 0, N_3, N_4, N_5, N_6)$ will lead to the same observation language $\observationsvar{N}^\literal{strong} = \observations{T}^\literal{strong}$.

Indeed, @fig-strong-ltbt-spectrum always selects the least coordinate to characterize a sublogic, which ensures that domination of coordinates in the figure and entailment between behavioral preorders coincide.
:::

::: {#rem-other-coordinates}
#### Other Coordinates

We have singled out a handful of coordinates.
Many other coordinates will still correspond to distinct equivalences.
For instance, we could consider $N^{\notionname{2T}} = (2,0,0,0,0,0)$, preordering states that cannot be distinguished by traces up to a length of $2$.
But it is difficult to make a case for such a “notion of equivalence,” which washes away differences of future behavior.

Two kinds of depth-bounded families, however, are common in the literature, and can also be placed in our spectrum:

- $k$-step bisimilarity: $(k,\infty,\infty,\infty,\infty,\infty)$ is a $k$-observation approximation of bisimilarity that sometimes appears in proofs.^[TODO: look up example]
- $k$-nested similarity: $(\infty,\infty,\infty,\infty,\infty,k-1)$ for $k>1$ defines a spectrum of modal quantifier alternation depth between similarity and bisimilarity.
:::

::: {#rem-infinities}
#### (In-)finitary Variants

One can introduce more dimensions to the spectrum with respect to the possibility of infinitary observations.
Our choice focuses on natural and most common versions of the equivalences, in particular:
similarity and bisimilarity with unbounded (infinitary) branching and trace-like notions with finitary depth.
Notions in @fig-strong-ltbt-spectrum correspond precisely to those without superscripts in the infinitary linear-time–branching-time spectrum of @glabbeek2001ltbtsiReport [Figure 9].
:::

### Non-Intersectionality

The strong spectrum of @def-strong-ltbt-spectrum is much richer than the diamond spectrum from @exm-simple-spectrum.
Still, its observation languages form no lattice.
For instance, the lines of simulation and failures join at ready simulation---and their coordinates as well $(\infty,\infty,\infty,\infty,0,0) \lub (\infty,1,0,0,1,1) = (\infty,\infty,\infty,\infty,1,1)$.
But $\observations{S}^\literal{strong} \cup \observations{F}^\literal{strong} \neq \observations{RS}^\literal{strong}$ and this makes a difference:

::: {#exm-non-ready-sim}

Consider the $\ccs$ processes
$\ccsprefix{\literal{a}} (\ccsprefix{\literal{a}} \literal{b} \ccschoice \literal{a})$ and
$\ccsprefix{\literal{a}} \ccsprefix{\literal{a}} \literal{b} \ccschoice \ccsprefix{\literal{a}}\literal{a}$.
They cannot be told apart by $\observations{S}^\literal{strong}$ or $\observations{F}^\literal{strong}$ and thus are simulation and failure equivalent (and moreover even ready-trace equivalent).

Still, the formula $\hmlobs{\literal{a}}\hmlands\set{\hmlobs{\literal a}\hmlands\set{\hmlneg \hmlobs{\literal b}}, \hmlobs{\literal a}\hmlobs{\literal b}} \in \observations{RS}^\literal{strong}$ distinguishes the first process from the second.
Therefore, the processes are not ready-simulation equivalent.
:::

\noindent
What this shows is that one cannot prove two states to be ready-equivalent by showing that they are equated by simulation and failures:
$${\beq{S}} \cap {\beq{F}} \, \nsubseteq \, {\beq{RS}}.$$
The relationship between the characterized equivalences is *non-intersectional*.

In general, multiple preorders may relate two states without this entailing a stronger equivalence.
So the question “Which equivalence from a spectrum relates two states?” is to simple, one has to ask: “Which equivalence**s** relate two processes?”

This motivates the *spectroscopy problem*.

## Spectroscopy {#sec-spectroscopy}

Now that we have a formal way of describing equivalence spectra, we can make formal the *spectroscopy problem*---the core topic of this thesis.
We will also collect first thoughts on its complexity.

### The Spectroscopy Problem

The problem has originally been introduced in @bjn2022decidingAllBehavioralEqs as the “abstract observation preorder problem” with respect to modal characterizations of the strong spectrum.
We here reintroduce it in a more generic form.

::: {#def-spectroscopy-problem .problem}
#### Spectroscopy Problem

In the context of a transition system $\system$ and a spectrum $(\notions, \leq, \observationsvar{N \in \notions})$, the *spectroscopy problem* asks:

Input
:  States $p$ and $q$.

Output
:  Set of notions $\notions_{p,q} \subseteq \notions$, such that $p \bpreordvar{\observationsvar{N}} q$ for each $N \in \notions_{p,q}$.
:::

::: {#exm-spectroscopy-front}
For the “trolled philosophers” of @exm-bisim-sim, we have determined that the systems are simulation-preordered, but not bisimilar, that is, $\literal{Q} \bpreord{S} \literal{T}$, but $\literal{Q} \nbpreord{B} \literal{T}$.
The first fact implies $\literal{Q} \bpreord{T} \literal{T}$.

But what about other notions from the strong spectrum of Subsection -@sec-full-spectrum?
Besides similarity, there might well be incomparable or finer notions that too preorder $\literal{Q}$ to $\literal{T}$!

The solution to the spectroscopy problem on $\literal{Q}$ and $\literal{T}$ is $\notions^{\literal{strong}}_{\literal{Q}, \literal{T}} = \set{N \in \notions^\literal{strong} \mid N \nleq (2,2,0,0,2,2)}$.
A minimal formula to distinguish $\literal{Q}$ from $\literal{T}$ with this coordinate would be $\hmlands\set{\hmlneg\hmlobs{\tau}\hmlands\set{\hmlneg\hmlobs{\literal{a}}\hmltrue}}$.
(The following chapters will reveal how to reliably arrive at this knowledge, in particular, the minimality.)

Because the coordinate of $2$-nested simulation, $\notionname{2S} = (\infty,\infty,\infty,\infty,\infty,1)$ is not less or equal to $(2,2,0,0,2,2)$, we arrive at $\literal{Q} \bpreord{2S} \literal{T}$, which implies *all* preorders of @fig-strong-ltbt-spectrum except for bisimilarity.

:::: {#fig-spectroscopy-front}

```tikz
\begin{tikzpicture}[]
  \begin{scope}[rotate=30, scale=1]
    \draw[step=1.0, xshift=-.7505cm, yshift=-1.3cm, opacity=0.4] (0,0) grid (3.5,3.5);
    \draw[draw=yellow, fill=yellow, opacity=0.7, fill opacity=0.3, text opacity=1, xshift=-.7505cm, yshift=-1.3cm]
      (-.05,-.05) rectangle (.05,4) node[pos=.65] {simulation};
    \draw[draw=red, fill=red, opacity=0.7, fill opacity=0.2, text opacity=1, xshift=-.7505cm, yshift=-1.3cm]
      (-.1,-.1) rectangle (.1,.1) node[below, align=center] {enabledness\\/trace};
    %
    \draw[step=1.0, opacity=0.4] (0,0) grid (3.5,3.5);
    \draw[draw=none, fill=pink, fill opacity=0.1, text opacity=1]
      (-.05,-.05) rectangle (4,4) node[pos=.74, align=center] {2-nested sim};
    \draw[draw=violet, fill=violet, opacity=0.7, fill opacity=0.2, text opacity=1]
      (-.05,-.05) rectangle (4,1.05) node[pos=.73, align=center] {(im)possible\\future};
    \draw[draw=orange, fill=orange, opacity=0.4, fill opacity=0.2, text opacity=1]
        (-.05,-.05) rectangle (1.05,4) node[pos=.73, align=center] {ready\\simulation};
    \draw[draw=green, fill=green, opacity=0.7, fill opacity=0.2, text opacity=1]
      (-.05,-.05) rectangle (1.05,1.05) node[below, align=center] {failure\\/ready};
    %
    \draw[step=1.0, xshift=.7505cm, yshift=1.3cm, opacity=0.4] (0,0) grid (3.5,3.5);
    \draw[thick, opacity=0.5, text opacity=.8, xshift=.7505cm, yshift=1.3cm] (-.25,2) -- (4,2) node[pos=1,right] {conjunctions = 2};
    \draw[thick, opacity=0.5, text opacity=.8, xshift=.7505cm, yshift=1.3cm] (2,-.25) -- (2,4) node[pos=1,left] {neg.\ clause depth = 2};
    \draw[draw=none, fill=violet, fill opacity=0.1, text opacity=1, xshift=.7505cm, yshift=1.3cm]
      (-.05,-.05) rectangle (4,4) node[pos=.74, align=center] {bisimulation};
    %
    \draw[draw=red, fill=none, opacity=0.5, text opacity=1, line width=2pt, xshift=.7505cm, yshift=1.3cm]
      (1.95,2.5) -- (1.95, 1.95) node[above right, align=center] {$\hmlands\set{\hmlneg\hmlobs{\tau}\hmlands\set{\hmlneg\hmlobs{\literal{a}}\hmltrue}}$} -- (2.5,1.95);
  \end{scope}
\end{tikzpicture}
```

Cross section of the strong spectrum showing the dimensions conjunctions, negative clause depth, and negation depth.
All preorders below the red mark at $(2,2,2)$ hold in @exm-spectroscopy-front.
::::

Note that we have expressed $\notions^{\literal{strong}}_{\literal{Q}, \literal{T}}$ through a negation (“$\dots \nleq (2,2,0,0,2,2)$”).
The reason is that a positive description is usually unwieldy.
In this (comparably easy) case, we could for example list the half-spaces below the cheapest distinction, and this would read:
$\notions^{\literal{strong}}_{\literal{Q}, \literal{T}} =
(\set{0,1} \times \natsext^5) \cup
(\natsext \times \set{0,1} \times \natsext^4) \cup
(\natsext^4 \times \set{0,1} \times \natsext) \cup
(\natsext^5 \times \set{0,1})$.
:::

\noindent
Technically, it is convenient to not compute $\notions_{p,q}$ directly.
Rather we aim to construct the *Pareto front* of minimal notions that do not hold, $\Min(\notions \setminus \notions_{p,q})$.
The Pareto front serves as a unique representation, from which $\notions_{p,q}$ can be constructed as complement of the upwards closure $\notions \setminus \upset \Min(\notions \setminus \notions_{p,q})$
(where ${\upset\! B} := \set{b \mid \exists b' \in B \ldotp b' \leq b}$ is the upwards closure for $B$ subset of some partially-ordered set).
Clearly, Pareto fronts form *anti-chains* and appear naturally in optimization problems.

All spectra we are concerned with are well-quasi ordered, which means that each $\Min(\notions \setminus \notions_{p,q})$ must be finite in size [@kruskal1972wqo] and thus “more handy” than the full sets $\notions_{p,q}$ or $\notions \setminus \notions_{p,q}$.

So, effectively, we will be asking:
What are the minimal notions to distinguish $p$ from $q$---and then often talk about the converse: The most-fitting notions to preorder or equate the states.
Everything else is implied.

### Spectroscopy as Abstract Subtraction

Another way of viewing the spectroscopy problem is that we aim to compute an abstracted kind of *difference* between programs.

::: {#def-observations}
#### Observations and Difference

On a transition system $\system$, the possible observations of a state, $\semanticsobs{\cdot} \colon \states \to \powerset{\hml}$, are defined as:
$$\semanticsobs{p} ≔ \set{φ ∈ \hml \mid p ∈ \semantics{φ}}.$$
The *difference* between $p$ and $q$ is defined as:
$$\difference{p}{q} ≔ \semanticsobs{p} \setminus \semanticsobs{q}.$$
:::

\noindent
$\difference{p}{q}$ expresses the set of observations one could make of $p$ that one cannot make of $q$.
This set will be empty, when the states are bisimilar, or infinite, otherwise.

With this notation, we could rephrase @def-distinctions:

::: {#prp-behavioraleq}
Two states $p$ and $q$ are preordered with respect to a sublogic $\observationsvar{} ⊆ \hml$:
$$p \bpreordvar{\observationsvar{}} q ⟺ \difference{p}{q} \cap \observationsvar{} = \varnothing.$$
:::

\noindent
A spectroscopy then is about computing some abstraction $\Delta_\alpha$ such that
$N \in \Delta_\alpha(p,q)$ precisely if $\difference{p}{q} \cap \observationsvar{N} \neq \varnothing$.

### Complexities {#sec-equivalence-complexities}

What complexities to expect when deciding spectroscopy problems on finite systems?
Details depend, of course, on the specific spectrum and flavor of Hennessy–Milner logic we are concerned with.
Still, solving the spectroscopy problem cannot be easier than solving the covered individual equivalence problems.

To get a first idea, let us examine the complexities of common equivalence checking problems in the strong spectrum.
The rule of thumb is that trace-like equivalences are $\complexityname{PSPACE}$-complete and bisimilarities are $\complexityname{P}$-complete [@hs1996complexityEquivalences;@bgs1992bisimPComplete].

Bisimilarity finds itself in a *valley* of tractability,
if we look at a cross section through the equivalence spectrum as in @fig-complexity-slope.
The best known bisimilarity algorithms for finite-state transition systems take $\bigo{\relsize{\step{}} \log \relsize{S}}$ time [usually deriving from @paigetarjan1987partitionrefinement].

::: {#fig-complexity-slope}
```tikz
\begin{tikzpicture}[]
  \begin{axis}[
        title = {},
        width = 12cm,
        height = 5cm,
        symbolic x coords = {ID,GI,B,S,T,E,U},
        xtick = data,
        ytick = {0, 1, 2, 3, 4, 5},
        yticklabels = {
          $\bigo{1}$,
          $\bigo{\relsize{\step{}}}$,
          $\bigo{\relsize{\step{}} \log \relsize{S}}$,
          $\bigo{\relsize{\step{}} \relsize{S}}$,
          $\complexityname{NP}$,
          $\complexityname{PSPACE}$,
        }
    ]
    \addplot+ [smooth] coordinates {(ID,0) (GI,4) (B,2) (S,3) (T,5) (E,1) (U,0)};
    \addplot [opacity=0.2, dashed, thick]
        coordinates {(B,0) (B,5) (U,5) (U,0) (B,0)};
  \end{axis}
\end{tikzpicture}
```
Bisimilarity's complexity valley.
:::

For coarser simulation-like equivalences, the best known algorithms need $\bigo{\relsize{\step{}} \relsize{S}}$ time [@rt2010efficientSimulation].^[Or $\bigo{\relsize{\step{}} \relsize{\relqotient{S}{\beq{S}}}}$ to name the bound as @rt2010efficientSimulation present it.]

The finer graph-isomorphism equivalence (@def-graph-isomorphism) again is harder with the best known solution [@babai2016graphIsomorphismQuasiPoly] in quasi-polynomial time $2^{\bigo{(\log n)^3}}$.

There however are little strict hardness results at this level of granularity.
So, better time complexities for graph isomorphism, bisimilarity, and similarity are conceivable (albeit improbable).
@gmv2023lowerboundsBisimPartitionRefinement show that at least partition-refinement algorithms for bisimilarity cannot do better than $\bigo{\relsize{\step{}} \log \relsize{S}}$.
In a recent preprint, @groote2024quadraticlowerboundsimulation establish that similarity is strictly more complex than bisimilarity.

The trivial equivalences at the end of the cross section, identity $\notionname{ID}$ and universal equivalence $\notionname{U}$, can be solved directly.
Enabledness equivalence $\notionname{E}$ can as well be computed quite quickly by just comparing outgoing transitions.

In this thesis, we solve the spectroscopy problem for the strong and weak spectrum.
So, we must be at least as complex as the equivalences between bisimilarity and universal equivalence, boxed in @fig-complexity-slope.
Consequently, the spectroscopy problem for the standard equivalence spectra is $\complexityname{PSPACE}$-hard.

## Discussion

In this chapter, we have formalized how to handle *spectra of equivalence* (@nte-idea-hierarchy), and instantiated the approach to the strong spectrum of @glabbeek2001ltbtsiReport.
From there, we have introduced the *spectroscopy problem*, which asks for notions to preorder compared states (@nte-idea-spectroscopy).

By formulating the problem in terms of a lattice over $\natsext$-vectors, the family of qualitative strong preorder/equivalence problems becomes a single quantitative problem:
The spectroscopy problem for the strong spectrum.

We have already laid the groundwork to shift the semantic question of equivalence into a syntactic question of the shape of distinguishing formulas.

The core ideas of this section have already been explored in @bjn2022decidingAllBehavioralEqs and @bisping2023equivalenceEnergyGames for the strong spectrum.
However, in my prior work the expressiveness prices played a more crucial role.
Here, we instead opted for a parameterized grammar to define notions and their observations $\observationsvar{N}$.
In this grammar, we force observations in clauses of conjunctions and count $\hmltrue$ as part of the $\zerovec$-notion.
These are mostly superficial changes to streamline the following presentation.
We have shown that traces, failures, simulation and bisimulation equivalence as defined by the notion coordinates match their textbook definitions.

So far, we have a problem and confidence that its solution conveys information about equivalences of the strong spectrum.
Subsection [-@sec-equivalence-complexities] has established that spectroscopy complexity must be at least $\complexityname{PSPACE}$ on the strong spectrum.

However, there is a polynomial-time part of spectrum around bisimilarity and (ready) similarity.
In the next two chapters, we will first solve the spectroscopy problem for this polynomial slice and then extend to the whole strong spectrum.
After that, we will also consider the weak spectrum.
