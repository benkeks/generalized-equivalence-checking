# Spectroscopy of the Strong Equivalence Spectrum {#sec-strong-spectrum}

::: {.content-visible when-format="html"}
{{< include style/macros-html.md >}}
{{< include style/macros.md >}}
:::

The energy game approach can in fact be leveraged to solve the spectroscopy problem for the whole of the strong equivalence spectrum.
This chapter showcases the main result of my paper “Process Equivalence Problems as Energy Games” [@bisping2023equivalenceEnergyGames].

The core ingredient of this chapter is a richer energy game, to be presented in @sec-stong-spectro-game.
The bisimulation energy game of @sec-approach is not complex enough to capture all strong equivalences of @sec-spectrum.
It is “too easy” for the attacker in the sense that they can use unbounded conjunctions to account for every transition the defender might choose after each observation.
But the weaker notions of the spectrum heavily limit how many conjunctions may be used to name a distinction!

Our core trick will be to break the link between conjunctions and observation sequences in the game, analogously to the *subset construction* on finite automata.

::: {#idea-subset-construction .callout-idea .callout-note}
#### Breaking up observations and conjunctions

Linear-time notions can be addressed in the spectroscopy game by interjecting a subset-construction on defender states between moves that correspond to observations and to conjunctions.
:::

This will lead to exponential blow-up.
Some of it can be alleviated, as we will see in @sec-specific-spectro-games.
In @sec-deciding-individual-eqs, we will discuss how to get rid of the blowup where possible when instantiating the game to *decide equivalences individually*.

::: {#idea-instance-games .callout-idea .callout-note}
#### Generating equvialence checkers

By instantiating the spectroscopy game with known initial energies and exploiting the supply of conjunction moves, we can derive efficient decision procedures for individual equivalences.
:::

@fig-strong-spectroscopy-big-picture gives an overview of the two routes to decide equivalences collectively and individually we will explore.

::: {#fig-strong-spectroscopy-big-picture}
```tikz
\begin{tikzpicture}[auto,node distance=1.1cm,
  algstep/.style={minimum width=4.3cm, minimum height=1.2cm, draw=gray, rectangle,align=center,rounded corners}]
  \node[algstep, draw] (States) {States $p, q$ in \\ transition system $\system$};
  \node[algstep, draw, right of=States, node distance=8.1cm] (Preorders) {Strong notions that \\ fit to preorder $p$ to $q$};
  \node[algstep, draw, right of=Preorders, node distance=5cm] (IndividualNotion) {Does notion $N$\\ preorder $p$ to $q$?};
  \node[algstep, draw=TealBlue, below of=States, node distance=2.5cm] (EnergyGame) {Strong spectroscopy \\ energy game $\gamespectroscopy^{\system}$};
  \node[algstep, draw=Peach, below of=EnergyGame, node distance=2.5cm] (ReachabilityGame) {Derived reachability \\ game $\mathsf{Reach}(\gamespectroscopy^{\system}, N)$};
  \node[algstep, draw=TealBlue, below of=Preorders, node distance=2.5cm] (AttackerWinningBudgets) {Minimal attacker winning \\ budgets $\attackerwinsmin(\attackerpos{p,\set{q}})$};
  \node[algstep, draw=Peach, below of=AttackerWinningBudgets, node distance=2.5cm] (AttackerWinningReachability) {Defender winning region\\ $(\attackerpos{p,\set{q}}, N) \in \defenderwins$};
  \path
    (States) edge[->, dashed] node {Spectroscopy problem} (Preorders)
    (States) edge[->, draw=TealBlue] node {Definition 5.1} (EnergyGame)
    (AttackerWinningBudgets) edge[->, draw=TealBlue] node[label={[align=center]right:XOR}] {Theorem 5.1} (Preorders)
    (EnergyGame) edge[->, draw=TealBlue] node {Algorithm 4.1} (AttackerWinningBudgets);
  
  \path
    (States) edge[->, dashed, bend left=20] node {$N$-preorder problem} (IndividualNotion)
    (Preorders) edge[->, gray] node {} (IndividualNotion)
    (EnergyGame) edge[->, draw=Peach] node {Definition 5.2} (ReachabilityGame)
    (ReachabilityGame) edge[->, draw=Peach] node {Algorithm 2.1} (AttackerWinningReachability)
    (AttackerWinningReachability.east) edge[->, draw=Peach, bend right=25] node {} (IndividualNotion)
    (AttackerWinningReachability.east) edge[->, draw=TealBlue, dashed, bend right=25] node {} (IndividualNotion);
  
  \node[text=TealBlue, right=2mm of AttackerWinningBudgets, align=right] (Sec51) {Section 5.1 \\ and 5.2};
  \node[text=Peach, right=2mm of AttackerWinningReachability] (Sec52) {Section 5.3};

  \node[below=3mm of AttackerWinningReachability] (Phantom) {};
\end{tikzpicture}
```

How we apply the spectroscopy approach to the full strong spectrum.
:::

## The Strong Spectroscopy Game {#sec-stong-spectro-game}

In this section, we examine a game that does not “overlook” trace observations, as the *bisimulation energy game* (@def-bisim-energy-game) does.

:::: {#exm-trace-distinction-bisim-game}

Consider the $\ccs$-processes
$\ccsprefix{\literal{a}} \ccsprefix{\literal{b}} \literal{a}$ and
$\ccsprefix{\literal{a}} (\literal{a} \ccschoice \literal{b})$.
Clearly, only the first one allows the trace observation $\hmlobs{\literal{a}}\hmlobs{\literal{b}}\hmlobs{\literal{a}}$.
Thus, the processes are not bisimilar and can be distinguished in the bisimulation game.
But the bisimulation game formula (cf. @lem-attacks-imply-formulas) derivable from the game would be
$\hmlobs{\literal{a}}\hmlands \set{ \hmlobs{\literal{b}}, \hmlobs{\literal{b}} \hmlands \set{\hmlobs{\literal{a}} }}$, which is not part of trace observations $\observationsvar[\literal{strong}]{(\infty,0,0,0,0,0)}$.
::::

It might be possible to reconstruct trace observations from such tree-like observations as the one of @exm-trace-distinction-bisim-game.
But by the closing arguments of @sec-spectrum-approach-discussion, and also according to @martensGroote2023minimalDistFormulasNP this must inherently be NP-hard.
What we will do instead is adapt the bisimulation game such that it also expresses trace-like distinctions, and precisely counts conjunctions.

### The Spectroscopy Game

The *strong spectroscopy game* is played not on pairs of states, but on a pair of a state and *a set of states*!
@fig-strong-spectroscopy-game gives a graphical representation.
The intuition is that the attacker shows how to construct formulas that distinguish a process $p$ from every $q$ in a set of processes $Q$.
As long as observations happen, the defender is moved to the set of states $Q$ reachable through non-determinism; only at conjunction moves does the defender have to choose a $q \in Q$.
Treating conjunctions more explicitly, will also allow us to track the depth of positive conjuncts in sufficient detail.

::: {#fig-strong-spectroscopy-game fig-pos="th"}

```tikz
\begin{tikzpicture}[>->,shorten <=1pt,shorten >=0.5pt,auto,node distance=2cm,
    rel/.style={dashed,font=\it},
    posStyle/.style={draw, inner sep=1ex,minimum size=1cm,minimum width=2cm,anchor=center,draw,black,fill=gray!5}]
  \node[posStyle, initial, initial text={}]
    (Att){$\attackerpos{p,Q}$};
  \node[ellipse, draw, inner sep=1ex, minimum size=1cm,minimum width=2cm,fill=gray!5]
    (Def) [right = 2.2cm of Att] {$\defenderpos{p,Q \setminus Q_*,Q_*}$};
  \node[posStyle]
    (AttConj) [below right = 1.2cm and 3cm of Att] {$\attackerpos[\land]{p,q}$};
  \node[posStyle, dashed]
    (AttSwap) [right = 3cm of AttConj] {$\attackerpos{q,\{p\}}$};
  \node[posStyle, dashed]
    (AttContinue) [above = 1cm of AttSwap] {$\attackerpos{p,\{q\}}$};
  \node[posStyle, dashed]
    (AttObs) [above = 1cm of AttContinue] {$\attackerpos{p^\prime,Q^\prime}$};
  % \node[posStyle, dashed]
  %   (AttRevival) [below = 1cm of AttSwap] {$\attackerpos{p,Q_*}$};

  \node (Ghost) [below = 1cm of AttSwap] {};

  \path
    (Att) edge[bend left=28]
      node[pos=.3, align=center, label={[label distance=0.0cm]-25:$\textcolor{gray}{\textcolor{obsColor}{-1},0,0,0,0,0}$}] {$p\step{\alpha}p^\prime$\\ $Q\step{\alpha}Q^\prime$} (AttObs)
    (Att) edge
      node[label={[label distance=0cm]-90:$\textcolor{gray}{0,0,0,0,0,0}$}] {$Q_* \subseteq Q$} (Def)
    (Def) edge[bend left=15]
      node[align=right, swap, pos=.1] {$q \in Q \setminus Q_*$\\$\textcolor{gray}{0,\textcolor{conjColor}{-1},0,\updmin{\textcolor{mainPosColor}{3},\textcolor{otherPosColor}{4}},0,0}$} (AttConj)
    (AttConj) edge[bend left=10]
      node[label={[label distance=0.0cm]-75:$\textcolor{gray}{\updmin{\textcolor{obsColor}{1},\textcolor{otherPosColor}{4}},0,0,0,0,0}$}] {} (AttContinue)
    (AttConj) edge[bend right=15]
      node[align=center, label={[label distance=0.0cm]-90:$\textcolor{gray}{\updmin{\textcolor{obsColor}{1},\textcolor{negObsColor}{5}},0,0,0,0,\textcolor{negsColor}{-1}}$}] {} (AttSwap)
    (Def) edge[bend left=10]
      node[align=center, label={[label distance=0.0cm]-30:$\textcolor{gray}{\updmin{\textcolor{obsColor}{1},\textcolor{mainPosColor}{3}},\textcolor{conjColor}{-1},0,0,0,0}$}] {$p' = p$\\$Q'=Q_* \neq \varnothing$} (AttObs);
\end{tikzpicture}

```

Schematic spectroscopy game $\gamespectroscopy$ of @def-strong-spectroscopy-game.
:::

Again, energies limit the syntactic expressiveness of the formulas.

- The first dimension bounds for how many turns the attacker may challenge observations of actions.
- The second dimension limits how often they may use conjunctions to resolve nondeterminism.
- The third, fourth, and fifth dimensions limit how deeply observations may nest underneath a conjunction, where the fifth stands for negated conjuncts, the third for one of the deepest positive conjuncts and the fourth for the other positive conjuncts.
- The last dimension limits how often the attacker may use negations to enforce symmetry by swapping sides.

The moves of the following definition closely match productions in the grammar of observations for the strong spectrum [@def-strong-spectrum].

::: {#def-strong-spectroscopy-game}

For a system $\system=(\states,\actions,\step{})$,
the $6$-dimensional *strong spectroscopy energy game*
$\gamespectroscopy^{\system}=(G,G_{\defender},\gamemoveblank,w)$
consists of

- *attacker positions* $\attackerpos{p,Q} \in G_\attacker$,
- *attacker conjunct positions* $\attackerpos[\land]{p,q} \in G_\attacker$,
- *defender conjunction positions* $\defenderpos{p,Q,Q_*} \in G_\defender$,

where $p, q \in \states$ and $Q, Q_* \in \powerset{\states}$, and six kinds of moves:
$$
\begin{array}{rrcll}
  \textit{observation}
  & \attackerpos{p,Q}
  & \gamemove{-1,0,0,0,0,0}
  & \attackerpos{p', Q'}
  & \text{if $p \step{\alpha} p^\prime$\!, $Q \step{\alpha} Q'$,}
  \\
  \textit{conjunction}
  & \attackerpos{p,Q}
  & \gamemove{0,0,0,0,0,0}
  & \defenderpos{p,Q \setminus Q_*, Q_*}
  & \text{if $Q_* \subseteq Q$,}
  \\
  \textit{conj.~revival}
  & \defenderpos{p,Q,Q_*}
  & \gamemove{\updmin{1,3},-1,0,0,0,0}
  & \attackerpos{p,Q_*}
  & \text{if $Q_* \neq \varnothing$,}
  \\
  \textit{conj.~answer}
  & \defenderpos{p,Q,Q_*}
  & \gamemove{0,-1,0,\updmin{3,4},0,0}
  & \attackerpos[\land]{p,q}
  & \text{if $q \in Q$,}
  \\
  \textit{positive conjunct}
  & \attackerpos[\land]{p,q}
  & \gamemove{\updmin{1,4},0,0,0,0,0}
  & \attackerpos{p,\{q\}},
  & \text{and}
  \\
  \textit{negative conjunct}
  & \attackerpos[\land]{p,q}
  & \gamemove{\updmin{1,5},0,0,0,0,-1}
  & \attackerpos{q,\{p\}}
  & \text{if $p \neq q$.}
    \\
\end{array}
$$
:::

On the processes of @exm-trace-distinction-bisim-game, the attacker would move:
$$
\begin{array}{rcl}
  \attackerpos{\ccsprefix{\literal{a}} \ccsprefix{\literal{b}} \literal{a}, \set{\ccsprefix{\literal{a}} (\literal{a} \ccschoice \literal{b})}}
  & \gamemove{-\unitvec{1}} &
  \attackerpos{\ccsprefix{\literal{b}} \literal{a}, \set{\literal{a}, \literal{b}}} 
  \\
  & \gamemove{-\unitvec{1}} &
  \attackerpos{\literal{a}, \set{\ccsnull}}
  \\
  & \gamemove{-\unitvec{1}} &
  \attackerpos{\ccsnull, \varnothing}
  \\
  & \gamemove{\zerovec} &
  \defenderpos{\ccsnull, \varnothing, \varnothing}
  \; \ngamemoveblank
\end{array}
$$
Thereby the attacker would get the defender stuck on a trace budget of $(3,0,0,0,0,0) \leq (\infty,0,0,0,0,0) = \notionname{T}$.

The handling of conjunctions can be a little more intricate.

::: {#exm-spectroscopy-failure-trace-distinguished}

Let us think back to @exm-failure-trace-distinguished, that is, to $\literal{Q'} := \ccsprefix{\tau} (\ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b})$,
$\literal{T'_{\tau a a}} := \literal{Q'} \ccschoice \ccsprefix{\tau}\ccsprefix{\literal a} \literal a$, and
$\literal{T'_{\tau a}} := \literal{Q'} \ccschoice \ccsprefix{\tau}\literal a$, where $\literal{T'_{\tau a a}}$ is distinguished from $\literal{T'_{\tau a}}$ by the failure-trace observation $\hmlobs{\tau} \hmlands\set{\hmlobs{\literal a}\hmlobs{\literal{a}}, \hmlneg \hmlobs{\literal b}} \in \observationsvar[\literal{strong}]{(3,1,2,0,1,1)} \subseteq \observations[\literal{strong}]{\literal{FT}}$.

To point out a similar distinction in the spetroscopy game, the attacker moves:
$$
\begin{array}{rcl}
  \attackerpos{\literal{T'_{\tau a a}}, \set{\literal{T'_{\tau a}}}}
  & \gamemove{-\unitvec{1}} &
  \attackerpos{\ccsprefix{\literal a} \literal a, \set{\literal a, \ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b}}} \\
  & \gamemove{\zerovec} &
  \defenderpos{\ccsprefix{\literal a} \literal a, \set{\ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b}}, \set{\literal a}}
\end{array}
$$
Now, the defender has two options.

- If defender chooses conjunction answer $\dots \gamemove{0,-1,0,\updmin{3,4},0,0} \attackerpos[\wedge]{\ccsprefix{\literal a} \literal a, \ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b}}$, then attacker points out that $\literal b$ is not possible for the left process:
  $$
  \begin{array}{rcl}
    \attackerpos[\wedge]{\ccsprefix{\literal a} \literal a, \ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b}}
    & \gamemove{\updmin{1,5},0,0,0,0,-1} &
    \attackerpos{ \ccsprefix{\literal a} \literal a \ccschoice \ccsprefix{\literal b} \literal{b}, \set{\ccsprefix{\literal a} \literal a} }\\
    & \gamemove{-\unitvec{1}} &
    \attackerpos{ \literal{b}, \varnothing }
    \\
    & \gamemove{\zerovec} &
    \defenderpos{\literal{b}, \varnothing, \varnothing}
    \; \ngamemoveblank
  \end{array}
  $$
- If defender opts for a conjunction revival $\dots \gamemove{\updmin{1,3},-1,0,0,0,0} \attackerpos{\ccsprefix{\literal a} \literal a, \set{\literal a}}$, then attacker highlights that the left process can do $\literal a \literal a$:
  $$
  \begin{array}{rcl}
    \attackerpos{\ccsprefix{\literal a} \literal a, \set{\literal a}}
    & \gamemove{-\unitvec{1}} &
    \attackerpos{ \literal{a}, \set{\ccsnull} }
    \\
    & \gamemove{-\unitvec{1}} &
    \attackerpos{ \ccsnull, \varnothing }
    \\
    & \gamemove{\zerovec} &
    \defenderpos{\ccsnull, \varnothing, \varnothing}
    \; \ngamemoveblank
  \end{array}
  $$

To win in both cases, the attacker must start with a budget of at least $(3,1,2,0,1,1)$.

The game also allows another path through nested negations that the attacker wins at $(3,2,0,0,2,2)$, but this is not interesting for specific equivalences below bisimilarity.
:::

::: {#exm-spectroscopy-classic-ts}

Let us see what our prototype implementation on {{<equivio>}} reports about our original example processes of @sec-preliminaries.
We can input the philosopher processes of @exm-ccs and @exm-deterministic-phil, obtaining a tranistion system matching @exm-ts:

```ccs
PA = fork.a
PB = fork.b
P  = (fork! | PA | PB) \ {fork}

Q  = (fork! | fork.(a + b)) \ {fork}

@compare P, Q

@snip "--- layout info ---"

@compare Q,P
P(x=150, y=50, main)
Q(x=400, y=50, main)
```

Starting `@compare` (on {{<equivio>}}) triggers a spectroscopy along the lines we have discussed, leading to the output:

```
- Preordered by:
  simulation
- Left-right-distinguished by:
    ⟨τ⟩⋀{¬⟨b⟩⊤} (failure)
    ⟨τ⟩⋀{¬⟨a⟩⊤} (failure)
- Equated by:
  trace
- Show spectrum. View game.
```

That `P` is simulated by `Q` matches our finding from @exm-phil-sim.
Internally this is established by building the spectroscopy game and computing that $\attackerwinsmin(\attackerpos{\literal{P}, \set{\literal{Q}}}) = \set{(2,1,0,0,1,1)}$.

That no equivalence besides or above simulation can hold, is justified to the user by the failure `⟨τ⟩⋀{¬⟨a⟩⊤}`, which we also discussed in @sec-incomparabilities.
In the updcoming @sec-correctness-strong-spectroscopy we will also give the rules that the tool uses to construct this witness.

Invoking `@compare Q, P` for the other direction, {{<equivio>}} reports `⟨τ⟩⋀{⟨b⟩⊤,⟨a⟩⊤}` as a distinguishing formula disproving simulation (as we have found in @exm-hml).
:::

The spectroscopy game still is a bisimulation game in the following sense.

::: {#lem-spectroscopy-bisimulation-game}
$p_0$ and $q_0$ are bisimilar
iff the defender wins $\gamespectroscopy$ from $\attackerpos{p_0, \{q_0\}}$ with $e_0$ for every initial energy budget $e_0$,
that is, if $(\infty, \infty, \infty, \infty, \infty, \infty) \in \defenderwins(\attackerpos{p_0, \{q_0\}})$.^[
  Proof in Lemma 1 of @bisping2023equivalenceEnergyGamesReport.
]
:::

TODO: Example graph (just the old one?)

### Correctness {#sec-correctness-strong-spectroscopy}

To prove correctness, we proceed as with the bisimulation energy game in @sec-correctness-poly-spectroscopy:
On the one hand, we show that game moves correspond to formulas of similar prices and that the attacker winning implies the formulas to be distinguishing.
On the other hand, we establish that formulas of certain expressiveness prices certify winning attacks of matching budgets.

::: {#def-strategy-formulas-strong}
#### Strategy Formulas for $\gamespectroscopy$

The set of *strategy formulas* for a game position $g$ and a budget $e$, $\stratstrong(g, e)$, in the context of a strong spectroscopy game $\gamespectroscopy^{\system}$ is defined inductively by the following rules:
$$
\dfrac{
  \begin{matrix}
    \attackerpos{p,Q} \gamemove{-\unitvec{1}} \attackerpos{p', Q'} \quad
    e' = \energyupdate(-\unitvec{1}, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{p', Q'})
    \\
    p \step{\alpha} p' \quad Q \step{\alpha} Q' \quad
    φ ∈ \stratstrong(\attackerpos{p', Q'}, e')
  \end{matrix}
}{
  \hmlobs{α} φ ∈ \stratstrong(\attackerpos{p, q}, e)
}
$$
$$
\dfrac{
  \attackerpos{p,Q} \gamemove{\zerovec} \defenderpos{p, Q', Q_*} \quad
  e ∈ \attackerwins^{\gamespectroscopy}(\defenderpos{p, Q', Q_*}) \quad
  φ ∈ \stratstrong(\defenderpos{p, Q', Q_*}, e)
 }{
  φ ∈ \stratstrong(\attackerpos{p, Q}, e)
}
$$
$$
\dfrac{
  \begin{matrix}
    \defenderpos{p, Q, \varnothing} \gamemove{u_q} \attackerpos[\wedge]{p, q} \quad
    e_q = \energyupdate(u_q, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos[\wedge]{p, q})
    \\
    \psi_q ∈ \stratstrong(\attackerpos[\wedge]{p, q}, e_q) \quad
    \text{for each } q ∈ Q
  \end{matrix}
}{
  \hmland{q}{Q} \psi_q ∈ \stratstrong(\defenderpos{p, Q, \varnothing}, e)
}
$$
$$
\dfrac{
  \begin{matrix}
    \defenderpos{p, Q, Q_*} \gamemove{u_q} \attackerpos[\wedge]{p, q} \quad
    e_q = \energyupdate(u_q, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos[\wedge]{p, q})
    \\
    \psi_q ∈ \stratstrong(\attackerpos[\wedge]{p, q}, e_q) \quad
    \text{for each } q ∈ Q \text{ and }
    \\
    \defenderpos{p, Q, Q_*} \gamemove{u_*} \attackerpos{p, Q_*} \quad
    e_* = \energyupdate(u_*, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{p, Q_*})
    \\
    \psi_* = \hmlobs{α} φ ∈ \stratstrong(\attackerpos{p, Q_*}, e_*)
  \end{matrix}
}{
  \hmland{q}{Q \cup \set{*}} \psi_q ∈ \stratstrong(\defenderpos{p, Q, Q_*}, e)
}
$$
$$
\dfrac{
  \begin{matrix}
    \attackerpos[\wedge]{p, q} \gamemove{u} \attackerpos{p, \set{q}} \quad
    e' = \energyupdate(u, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{p, \set{q}})
    \\
    \hmlobs{α} φ ∈ \stratstrong(\attackerpos{p, \set{q}}, e')
  \end{matrix}
}{
  \hmlobs{α} φ ∈ \stratstrong(\attackerpos[\wedge]{p, q}, e)
}
$$

$$
\dfrac{
  \begin{matrix}
    \attackerpos[\wedge]{p, q} \gamemove{u} \attackerpos{q, \set{p}} \quad
    e' = \energyupdate(u, e) ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{q, \set{p}})
    \\
    p \neq q \quad
    \hmlobs{α} φ ∈ \stratstrong(\attackerpos{q, \set{p}}, e')
  \end{matrix}
}{
  \hmlneg \hmlobs{α} φ ∈ \stratstrong(\attackerpos[\wedge]{p, q}, e)
}
$$

:::

The base case of the definition is the rule for conjunctions at $\defenderpos{p, \varnothing, \varnothing}$, yielding strategy formula $\hmltrue$, which trivially distinguishes any $p$ from the empty set.

The correctness proof proceeds basically as with the bisimulation energy game, establishing soundness as in @lem-bisim-energy-game-soundness and completeness as in @lem-bisim-energy-game-completeness.
Proofs can be found in @bisping2023equivalenceEnergyGamesReport.
There are two minor definitional nuances between the presentation here and there, upon which we will comment in @rem-differences-paper.

::: {#lem-strong-spectroscopy-game-soundness}
If $e ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{p, Q})$,
then there is $φ ∈ \stratstrong(\attackerpos{p, Q}, e)$ with $φ ∈ \observationsvar[\literal{strong}]{e}$, $p ∈ \semantics{φ}$ and $Q \cap \semantics{φ} = \varnothing$.^[
  Proof in Lemma 2, 3, and 4 of @bisping2023equivalenceEnergyGamesReport.
]
:::

::: {#lem-strong-spectroscopy-game-completeness}
If there is $φ ∈ \observationsvar[\literal{strong}]{e}$ with $p ∈ \semantics{φ}$ and $Q \cap \semantics{φ} = \varnothing$,
then $e ∈ \attackerwins^{\gamespectroscopy}(\attackerpos{p, Q})$.^[
  Proof in Lemma 5 of @bisping2023equivalenceEnergyGamesReport.
]
:::

Taken together, @lem-strong-spectroscopy-game-soundness and @lem-strong-spectroscopy-game-completeness prove that the strong spectroscopy game $\gamespectroscopy$ precisely characterizes the strong equivalence spectrum $\notions^\literal{strong}$.

::: {#thm-strong-spectroscopy-game-characterization}
$p \bpreordvar{\observationsvar{e}} q$ for $e ∈ \notions^\literal{strong}$ precisely if the defender wins $\gamespectroscopy$ from $\attackerpos{p,\set{q}}$ if the attacker starts with budget $e$.
:::

Thus, we can solve the spectroscopy problem of @prob-spectroscopy-problem by computing $\notions^\literal{strong}_{p,q} = \notions^\literal{strong} \setminus \attackerwins^{\gamespectroscopy}(\attackerpos{p, \set{q}})$.

::: {#rem-differences-paper}
#### Differences to Conference Version

As mentioned in @rem-explicit-expr, @bisping2023equivalenceEnergyGames uses a slightly different pricing, where $\expr(\hmltrue) = \unitvec{2}$.
This difference is reflected in the game by @def-strong-spectroscopy-game charging $-\unitvec{2}$ for conjunctions after the defender conjunction positions instead of before.
With this, the attacker wins $\attackerpos{p, \varnothing} \gamemove{\zerovec} \defenderpos{p, \varnothing, \varnothing}$ with budget $\zerovec$, while the original definition in @bisping2023equivalenceEnergyGames would cost them $\unitvec{2}$ for $\attackerpos{p, \varnothing} \gamemove{-\unitvec{2}} \defenderpos{p, \varnothing, \varnothing}$.

Also, @bisping2023equivalenceEnergyGames defines the spectrum coordinates by giving the $\expr$ function instead of an $\observationsvar{N \in \notions}$ hierarchy.

Still, we can be confident that the conference paper results apply to the present presentation *mutatis mutandis*.
:::

### Complexity

As expected, the bigger spectroscopy game leads to exponential runtimes.
This comes as no surprise, for we have already discussed in @sec-equivalence-complexities that the complexity problem on the whole strong spectrum is PSPACE-hard.

::: {#thm-strong-spectroscopy-complexity}
Given a transition system $\system$,
the spectroscopy problem for the $\notions^\literal{strong}$-spectrum can be solved by the game approach in exponential time and space with respect to the state space size $\relsize{\states}$.
:::
:::proof
According to @thm-strong-spectroscopy-game-characterization, we can solve the spectroscopy problem for the $\notions^\literal{strong}$-spectrum by deciding the winning budgets of the strong spectroscopy game ${\gamespectroscopy}^{\system}$ on $\system=(\states,\actions,\step{})$.
We instantiate the winning budget complexity of @lem-declining-update-complexity for the case $d=6$ with the size of $\gamespectroscopy$ according to @def-strong-spectroscopy-game.

The amount of attacker positions is bounded by $\relsize{\states} \cdot 2^{\relsize{\states}}$.
The number of conjunction moves and defender conjunction positions is bounded by $\relsize{\states} \cdot 3^{\relsize{\states}}$.

The maximal out-degree for attacker positions is in $\bigo{2^{\relsize{\states}}}$, which dominates that of defender conjunction positions of $\bigo{\relsize{\states}}$,

This amounts to $o_{\gamemoveblank}$ in $\bigo{2^{\relsize{\states}}}$ and to $\relsize{G_{\triangle}}$ in $\bigo{\relsize{\states} \cdot 3^{\relsize{\states}}}$.

Inserting the parameters in the time bounds of @lem-declining-update-complexity yields:
$$
\begin{array}{rlccccccc}
    & O( & o_{\gamemoveblank} & \cdot & \relsize{G}^{2d} & \cdot & (d^2 + \relsize{G}^{d-1} \cdot d) & ) \\
  = & O( & (2^{\relsize{\states}}) & \cdot & (\relsize{\states} \cdot 3^{\relsize{\states}})^{2 \cdot 6} & \cdot & (6^2 + (\relsize{\states} \cdot 3^{\relsize{\states}})^{6-1} \cdot 6) & ) \\
  = & O( & 2^{\relsize{\states}} & \cdot & \relsize{\states}^{12} \cdot 3^{12\relsize{\states}} & \cdot & \relsize{\states}^5 \cdot 3^{5\relsize{\states}} & ) \\
  = & O( & \relsize{\states}^{17} & \cdot & 2^{\relsize{\states}} \cdot 3^{17\relsize{\states}} & ).
\end{array}
$$
For space complexity, the approach arrives at $\bigo{ \relsize{\states}^6 \cdot 3^{6\relsize{\states}}}$.
:::

Still, there are ways to decrease the complexity of the algorithm and thus increase applicability.
We will explore these in the next section.

## Clever Games on Subgraphs {#sec-specific-spectro-games}

We can exploit properties of the equivalences of the strong spectrum in @fig-strong-ltbt-spectrum we actually care about to focus on simpler variants of the spectroscopy game.

1. Properties of bisimilarity allow to reduce the game graph size without losing information.
1. Since the specific coordinates in @fig-strong-ltbt-spectrum only use 0, 1, and ∞ in components, we can employ @lem-declining-update-complexity-flattened to slighlty improve complexity bounds.
2. With more specific equivalences in mind, we can also focus on subgraphs of the spectroscopy game $\gamespectroscopy$ in order to obtain better bounds.

In this section, @sec-bisim-approximations will first discuss how parts of the game graph can be pruned thanks to properties of bisimilarity.
Then, we will use all listed tricks in the “clever” strong spectroscopy game in @sec-clever-strong-spectro.
In the following @sec-deciding-individual-eqs, we will take the last point to the extreme by instantiating the spectroscopy game down to only decide single equivalences.

### Pruning with Approximations {#sec-bisim-approximations}

We can exploit that the spectroscopy game is a bisimulation game by @lem-spectroscopy-bisimulation-game to reduce game graph size.
In particular, we will profit from the properties of bisimilarity being symmetric and transitive.

::: {#lem-symmetric-positions-defender}
On a strong spectroscopy game, $\attackerwins(\attackerpos{p,Q}) = \varnothing$ for $p \in Q$.
:::
:::proof
This is a contrapositive consequence of @lem-strong-spectroscopy-game-soundness:
As soon as $Q$ contains a state bisimilar to $p$, there cannot be a distinguishing formula for them by @thm-hennessy-milner.
This is the case here because $p \in Q$ and $p \beq{B} p$ by @lem-bisim-bisim.
Thus, there cannot be $e \in \attackerwins(\attackerpos{p,Q})$.
:::

For the game graph, this means that we do not need to consider any outgoing moves of $\attackerpos{p,\set{p} \cup Q}$-positions.
They will not lead to attacker wins anyway.
All game graph parts that are strictly below such positions can be disregarded.

Another important trick to reduce game size, is to first apply bisimulation-minimization to the transition system and then only construct the spectroscopy game for the minimized system, $\gamespectroscopy^{\quotient{\system}{\beq{B}}}$.
This approach is sound by the following lemma.

::: {#lem-quotienting-spectro-game}
The attacker wins $\attackerpos{p, \set{q}}$ on $\gamespectroscopy^{\system}$ with $e$ precisely if they win $\attackerpos{\eqclass{p}_{\beq{B}}}, \set{\eqclass{q}_{\beq{B}}}$ on $\gamespectroscopy^{\quotient{\system}{\beq{B}}}$.
:::
::: proof
By @prp-bisim-minimization, $p \beq{B} \eqclass{p}_{\beq{B}}$ and $q \beq{B} \eqclass{q}_{\beq{B}}$ on the merger of $\system$ and $\quotient{\system}{\beq{B}}$.
Therefore, the pairs each fulfill the same HML formulas by @thm-hennessy-milner, which implies equal distinguishing formula sets.
We can use @lem-strong-spectroscopy-game-soundness and @lem-strong-spectroscopy-game-completeness to translate these sets to and from the winning budgets.
:::

::: {#exm-pruning-effects}

Both tricks of pruning “symmetric” parts (@lem-symmetric-positions-defender) and pre-minimization by bisimilarity (@lem-quotienting-spectro-game) make an effective difference for the applicability of the spectroscopy approach:

{{<code_link "shared/src/main/scala-2.12" io.equiv.eqfiddle.tool.benchmark.Sizemark >}}
uses a small example system from @bisping2023equivalenceEnergyGames modelling Peterson's mutual exclusion algorithm.
The system has only $\relsize{\states} = 20$ states, but a lot of non-determinism due to saturation with internal behavior.

:::: {#fig-minimization-lattice .column-margin}

```tikz
\begin{tikzpicture}[auto,node distance=3cm,align=right]
  \node (B13){
    $\gamespectroscopy$ \\
    $\relsize{G} = \num{1199904}$ \\
    $\relsize{\gamemoveblank} = \num{6489300}$
   };
  \node (B1)[below left of=B13]{
    symmetry-pruned \\
    $\relsize{G} = \num{241419}$ \\
    $\relsize{\gamemoveblank} = \num{1291824}$
   };
  \node (B3)[below right of=B13]{
    bisim-minimized\vphantom{p} \\
    $\relsize{G} = \num{661271}$ \\
    $\relsize{\gamemoveblank} = \num{3523944}$
   };
  \node (Bnil)[below right of=B1]{
    bisim-minimized,\\
    symmetry-pruned\\
    $\relsize{G} = \num{67703}$ \\
    $\relsize{\gamemoveblank} = \num{348474}$
   };
  
  \path
  (B13)
    edge (B1)
    edge (B3)
  (B1)
    edge (Bnil)
  (B3)
    edge (Bnil);
\end{tikzpicture}
```

Example sizes of a spectroscopy game with and without pruning on Peterson's mutex system.
::::

@fig-minimization-lattice lists the sizes of game graphs on this system.
The default spectroscopy game at the top has roughly $1200$ thousand game positions.

Pruning symmetric parts removes four fifth of the graph (leaving $241$ thousand positions).

Only applying the bisimulation minimization roughly halves the graph (leaving $661$ thousand positions).
The bisimulation reduction is suprisingly effective, given that the bisimulation minimized Peterson system still has 19 states, that is, only one less than the originals system.
On the other hand, bisimilar states are precisely those that allow the biggest space of distinctions, blowing up the game.

Interestingly, the combination of both tricks reduces the game graph to $67$ thousand positions, roughly 5 % of the original size.
(If the effects of both minimizations were only multiplicative, the number would be around $133$ thousand states.)
This over-proporionate effect on the one hand has to do with the general exponentialities of the game graph, but also with the fact that bisimulation minimization increases the instances where pruning is applicable.
:::

So far, the optimizations have been *lossless* in the sense that we do not lose any information on the distinguishability of processes.
If we are willing to lose precision, additional reductions of the game graph are possible.

### The Clever Game {#sec-clever-strong-spectro}

We can *become more clever by looking one step ahead*.

The spectroscopy game $\gamespectroscopy$ of @def-strong-spectroscopy-game may branch exponentially with respect to $\relsize{Q}$ at conjunction challenges after $\attackerpos{p,Q}$.
For an efficient implementation, it is desirable to not do that.

Given the spectrum we are interested in, we can drastically limit the sensible attacker moves to four options by a little lookahead into the enabled actions $\initials{q}$ of $q \in Q$ and $\initials{p}$.

In the following, we will focus on the sub-spectrum $\widehat{\notions}^\literal{strong} \subseteq \set{0, 1, \infty}^6 \subseteq \notions^\literal{strong}$, where dimensions 3, 4, and 5 of modal depth for positive and negative conjuncts can only appear in certain combinations.

::: {#def-simpler-strong-spectrum}

The simpler strong spectrum, $\widehat{\notions}^\literal{strong}$, is defined as
$$
\widehat{\notions}^\literal{strong} ≔
  \set{e \in \set{0, 1, \infty}^6 \mid e_4 \leq e_3 \land (e_5 = \infty \longrightarrow e_3 = e_4)}.
$$
:::

Observe that all the coordinates of the strong linear-time–branching-time spectrum are still covered by the simpler spectrum.

::: {#def-strong-spectroscopy-game-clever}
#### Clever Spectroscopy Game

The *clever spectroscopy game* $\gamespectroscopyclever$, is defined exactly like the previous spectroscopy game of @def-strong-spectroscopy-game with the restriction of the conjunction challenges
$$
    \attackerpos{p,Q}
    \quad \gamemove{\zerovec}_\blacktriangle
    \quad \defenderpos{p,Q \setminus Q_*, Q_*}
    \quad \text{with } Q_* \subseteq Q,
$$
to situations where
$\; Q_* \in 
    \{ \; \varnothing,\quad
    \{ q \in Q \mid \initials{q} \subseteq \initials{p} \},\quad
    \{ q \in Q \mid \initials{p} \subseteq \initials{q} \},\quad
    \{ q \in Q \mid \initials{p} = \initials{q} \} \; \}.$
:::

::: {#thm-clever-strong-spectroscopy-correctness}
#### Correctness of Cleverness

For $e \in \widehat{\notions}^\literal{strong}$, the attacker wins $\gamespectroscopyclever$ from $\attackerpos{p_0,Q_0}$ with $e$ precisely if they win $\gamespectroscopy$ from $\attackerpos{p_0,Q_0}$ with $e$.^[
  Proof in Theorem 2 of @bisping2023equivalenceEnergyGamesReport.
]
:::

::: {#thm-clever-strong-spectroscopy-complexity}
Given a transition system $\system=(\states,\actions,\step{})$,
the spectroscopy problem for the simpler $\widehat{\notions}^\literal{strong}$-spectrum is solved by the game approach in $O( \relsize{\states}^{13} \cdot 2^{12\relsize{\states}} )$ time and $O( \relsize{\states} \cdot 2^{\relsize{\states}} )$ space,
:::
:::proof
We instantiate the “flattened” winning budget complexity of @lem-declining-update-complexity-flattened for the case $d=6$ with the size of $\gamespectroscopyclever$ according to @def-strong-spectroscopy-game-clever.

Now, the amount of all game positions is bounded by $\relsize{G_{\blacktriangle}} \in \relsize{\states} \cdot 2^{\relsize{\states}}$.

Concerning the maximal out-degree, now, defender conjunction positions are dominant, $o_{\gamemoveblank_\blacktriangle} \in \bigo{\relsize{\states}}$.

Inserting the parameters in the time bounds of @lem-declining-update-complexity-flattened yields:
$$
\begin{array}{rlccccccc}
    & O( & o_{\gamemoveblank_\blacktriangle} & \cdot & \relsize{G_\blacktriangle}^{2d} & \cdot & (d^2 + 3^{d-1} \cdot d)) \\
  = & O( & (\relsize{\states}) & \cdot & (\relsize{\states} \cdot 2^{\relsize{\states}})^{12} & \cdot & (6^2 + 3^{5} \cdot 6) & ) \\
  = & O( & \relsize{\states}^{13} \cdot 2^{12\relsize{\states}} & ).
\end{array}
$$

For space complexity, only game positions are relevant, $\bigo{ \relsize{G_\blacktriangle} \cdot 3^{d-1} \cdot d } = \bigo{ \relsize{\states} \cdot 2^{\relsize{\states}} }$.
:::

::: {#exm-pruning-effects-clever}

Let us see how the “clever game” adds up with the pruning effects on the Peterson example of @exm-pruning-effects.

:::: {#fig-minimization-lattice-clever .column-margin}

```tikz
\begin{tikzpicture}[auto,node distance=3cm,align=right]
  \node (B13){
    $\gamespectroscopyclever$ \\
    $\relsize{G_\blacktriangle} = \num{1020}$ \\
    $\relsize{\gamemoveblank_\blacktriangle} = \num{4774}$
   };
  \node (B1)[below left of=B13]{
    symmetry-pruned \\
    $\relsize{G_\blacktriangle} = \num{776}$ \\
    $\relsize{\gamemoveblank_\blacktriangle} = \num{3035}$
   };
  \node (B3)[below right of=B13]{
    bisim-minimized\vphantom{p} \\
    $\relsize{G_\blacktriangle} = \num{853}$ \\
    $\relsize{\gamemoveblank_\blacktriangle} = \num{3623}$
   };
  \node (Bnil)[below right of=B1]{
    bisim-minimized,\\
    symmetry-pruned\\
    $\relsize{G_\blacktriangle} = \num{664}$ \\
    $\relsize{\gamemoveblank_\blacktriangle} = \num{2363}$
   };
  
  \path
  (B13)
    edge (B1)
    edge (B3)
  (B1)
    edge (Bnil)
  (B3)
    edge (Bnil);
\end{tikzpicture}
```

Sizes of *clever* spectroscopy games with and without pruning on Peterson's mutex system.
::::

@fig-minimization-lattice-clever is the lower part of a cube of possible game graph optimizations, where @fig-minimization-lattice has already provided the upper part.

We can directly observe that $\gamespectroscopyclever$ is smaller than $\gamespectroscopy$ *by a factor of more than 1000*, with $1020$ positions instead of $1\,199\,904$.
This is due to the high non-determinism of the Peterson system, which leads to big $Q$-sets in $\attackerpos{p,Q}$-positions.
These entail exponentially many conjunction moves in $\gamespectroscopy$, which are absent in the $\gamespectroscopyclever$ subgraph.

The tricks of bisimulation minimization and pruning still pay off, reducing the game positions to 65 % of the unpruned game.
This is way less effective than in @exm-pruning-effects (where this factor has been 5 %), because the savings are not boosted by exponentialities.

Still, it makes sense to combine all three optimizations.
All in all, we have reduced the number of positions by a factor of 1800, and the number of moves by factor 2700.

Especially, the cleverness has paid off.
Without these tricks, the approach would not be applicable to systems with relevant non-determinism due to communication.^[
  The blowup on Peterson's mutex is precisely the argument I made in the introduction of @bisping2023equivalenceEnergyGames for why one has to move beyond the original spectroscopy algorithm of @bjn2022decidingAllBehavioralEqs.
  Therefore, the original/deprecated approach also is not present in this thesis.
]
:::

## Deciding Individuals Equivalences {#sec-deciding-individual-eqs}

As we have seen, the strong spectroscopy characterizes the spectroscopy problem *and* each individual equivalence (and preorder).
This section is about the feasability to decide individual preorders using the spectroscopy game.

The core idea behind @sec-deriving-eq-games is to *derive a reachability game* according to @def-derived-reachability-game, starting with an energy level from the strong spectrum, @def-strong-ltbt-spectrum.
Then, @alg-deciding-games can be employed to decide player winning regions of the game and thus the equivalence.

Of course, in this situation, one wants to avoid complexities that are part of the spectroscopy game only to capture other equivalences.
@sec-regaining-polynomiality will *regain polynomiality* for the polynomial portion of equivalence problems.

### Deriving Equivalence Games {#sec-deriving-eq-games}

Let us first explicate how to derive characterize equivalences thrugh reachability games derived accoridng to @def-derived-reachability-game.

::: {#def-derived-eq-game}
#### Derived Strong Equivalence Games

Given a system $\system=(\states,\actions,\step{})$, a strong notion of equivalence $N \in \notions^\literal{strong}$, and a pair of states $p,q$,
the *derived $N$-preorder game*
$\gamespectroscopyeq{N}^{\system,p,q}$
is defined as the part of the reachability game derived from the spectroscopy game
$(\gamespectroscopy^{\system})^R$
under starting position $(\attackerpos{p,\set{q}}, N)$.
:::

::: {#thm-derive-eq-games-characterize}
$p \bpreord{\observations{N}} q$ precisely if
the defender wins the $N$-preorder game ${\gamespectroscopyeq{N}^{\system,p,q}}$ from $(\attackerpos{p,\set{q}}, N)$.
:::
:::proof
By @thm-strong-spectroscopy-game-characterization, $p \bpreordvar{\observationsvar{N}} q$ implies that the defender wins $\gamespectroscopy^{\system}$ from $\attackerpos{p,\set{q}}$ when the attacker starts at energy $N$.
In other words, $N \notin \attackerwins(\attackerpos{p, \set{q}})$ for $\gamespectroscopy^{\system}$.
By @prp-derived-reachability-energies, this implies $(\attackerpos{p, \set{q}}, N) \notin \attackerwins$ for the derived reachability game $(\gamespectroscopy^{\system})^R$.
By @def-derived-eq-game, the defender thus wins $\gamespectroscopyeq{N}^{\system,p,q}$.
As the proof steps work in both directions, this completes the proof.
:::

The same reasoning works with the clever game version $\gamespectroscopyclever$, restricted to the $\widehat{\notions}^\literal{strong}$-spectrum used in @thm-clever-strong-spectroscopy-correctness.

Using @alg-deciding-games, our results entail decision procedures for each individual equivalence of the strong spectrum.
Of course, it makes sense for algorithms to employ the clever game and pruning.

::: {#exm-spectroscopy-equivalence-checking}

The following processes are two of the more complex ones of the separating examples in @glabbeek2001ltbtsiReport [p. 59].
They are equal with respect to ready traces, but not for simulation-like and possible-future-like equivalences.

```ccs
ABCACB = a.(b.d + c.e) + a.(c.f + b.g)
ABC    = a.(b.d + c.e + c.f + b.g)

@check trace,             ABCACB, ABC
@check ready-trace,       ABCACB, ABC
@check simulation,        ABCACB, ABC
@check impossible-future, ABCACB, ABC
@check bisimulation,      ABCACB, ABC

@snip "-------------"
@compare ABCACB, ABC
ABCACB(x=183, y=136, main)
ABC(x=683, y=136, main)
"0"(x=404, y=669)
"c.f + b.g"(x=438, y=307)
"b.d + c.e"(x=220, y=424)
"g"(x=441, y=528)
"f"(x=557, y=599)
"d"(x=299, y=520)
"e"(x=259, y=605)
"b.d + c.e + c.f + b.g"(x=627, y=372)
```

The `@check` keyword performs individual comparisons on {{<equivio>}}.
Invoking the check for traces, for instance, yields the following output:

```
@check "trace",            ABCACB, ABC
  - States are equivalent.
    View game. 
```

The $\notionname{T}$-preorder game derived from the (pruned clever) spectroscopy game under $\attackerpos{\literal{ABCACB}, \set{\literal{ABC}}}$ is depicted in @fig-derived-trace-eq-game.
Each position is won by the defender (hinted at by the positions being colored in blue).

:::: {#fig-derived-trace-eq-game fig-pos='t'}
```{dot}
digraph rel{-1531522041 [shape=circle, width=2, fixedsize=true, color=blue, style=bold, label="ABCACB, {ABC}, {}\n(∞,0,0,0,0,0)"];-1478041764 [shape=square, color=blue, style=bold, label="ABCACB, {ABC}\n(∞,0,0,0,0,0)"];1890643406 [shape=square, color=blue, style=bold, label="c.f + b.g, b.d + c.e + c.f + b.g\n(∞,-1,0,0,0,0)"];-407584024 [shape=square, color=blue, style=bold, label="b.d + c.e, b.d + c.e + c.f + b.g\n(∞,-1,0,0,0,0)"];-1030115238 [shape=circle, width=2, fixedsize=true, color=blue, style=bold, label="c.f + b.g,\n{b.d + c.e + c.f + b.g}, {}\n(∞,0,0,0,0,0)"];490779022 [shape=circle, width=2, fixedsize=true, color=blue, style=bold, label="b.d + c.e,\n{b.d + c.e + c.f + b.g}, {}\n(∞,0,0,0,0,0)"];1655621242 [shape=square, color=blue, style=bold, label="ABCACB, ABC\n(∞,-1,0,0,0,0)"];695410661 [shape=square, color=blue, style=bold, label="e, {e,f}\n(∞,0,0,0,0,0)"];945131307 [shape=square, color=blue, style=bold, label="g, {g,d}\n(∞,0,0,0,0,0)"];-58372795 [shape=square, color=blue, style=bold, label="c.f + b.g, {b.d + c.e + c.f + b.g}\n(∞,0,0,0,0,0)"];1777001188 [shape=square, color=blue, style=bold, label="d, {g,d}\n(∞,0,0,0,0,0)"];11287976 [shape=square, color=blue, style=bold, label="b.d + c.e, {b.d + c.e + c.f + b.g}\n(∞,0,0,0,0,0)"];-1092705565 [shape=square, color=blue, style=bold, label="f, {e,f}\n(∞,0,0,0,0,0)"];-1531522041->1655621242[color=black, label="(0,-1,0,min{3,4},0,0)"];-1478041764->11287976[color=black, label="(-1,0,0,0,0,0)"];-1478041764->-58372795[color=black, label="(-1,0,0,0,0,0)"];-1478041764->-1531522041[color=black, label="(0,0,0,0,0,0)"];-1030115238->1890643406[color=black, label="(0,-1,0,min{3,4},0,0)"];490779022->-407584024[color=black, label="(0,-1,0,min{3,4},0,0)"];-58372795->945131307[color=black, label="(-1,0,0,0,0,0)"];-58372795->-1092705565[color=black, label="(-1,0,0,0,0,0)"];-58372795->-1030115238[color=black, label="(0,0,0,0,0,0)"];11287976->1777001188[color=black, label="(-1,0,0,0,0,0)"];11287976->695410661[color=black, label="(-1,0,0,0,0,0)"];11287976->490779022[color=black, label="(0,0,0,,0,0)"]}
```
Pruned clever strong spectroscopy game below position $\attackerpos{\literal{ABCACB}, \set{\literal{ABC}}}$ instantiated to starting energy $\notionname{T} = (\infty, 0,0,0,0,0)$ to decide trace equivalence.
::::

Maybe interestingly, the derived reachability game of @fig-derived-trace-eq-game has fewer positions than the pruned clever spectroscopy game below $\attackerpos{\literal{ABCACB}, \set{\literal{ABC}}}$ would have.^[
  Incidentally, the answer to the question how many positions this spectroscopy game would have is 42.
]
:::

As the derived game positions are obtained through products of original positions and energies, one might assume the derived preorder games to be way bigger than the pure spectroscopy game.
But for the named notions, this is usually not the case because of two aspects:

The first important fine point is that many notions have $\infty$-entries and that $\infty - 1 = \infty$.
For instance, in the derived bisimulation game, starting at $(\infty, \infty, \infty, \infty, \infty, \infty)$, all positions will remain at this energy level.
Thus, the derived bisimulation game $\gamespectroscopyeq{B}^{\system,p,q}$ has isomorphic positions to $\gamespectroscopy$ under $\attackerpos{p, \set{q}}$.

The other point to consider is that the game is cut off at exhausted energies.
Therefore, $0$-entries in components lead to smaller games, only using subgraphs of the spectroscopy game.

Only $1$-components grow the derived game graph.
In principle, each component that starts at $1$ instead of $\infty$ or $0$ might roughly double the graph size.

The *equiv.io* implementation, does prune some attacker moves that cannot be winning, in particular non-empty conjunctions if the conjunction budget is at 0.
Therefore, the subgame used by the tool for @exm-spectroscopy-equivalence-checking, in reality is the one in @fig-derived-trace-eq-game-true.

:::{#fig-derived-trace-eq-game-true fig-pos='t'}
```{dot}
digraph rel{695410661 [shape=square, color=blue, style=bold, label="e, {e,f}\n(∞,0,0,0,0,0)"];945131307 [shape=square, color=blue, style=bold, label="g, {g,d}\n(∞,0,0,0,0,0)"];-58372795 [shape=square, color=blue, style=bold, label="c.f + b.g, {b.d + c.e + c.f + b.g}\n(∞,0,0,0,0,0)"];-1478041764 [shape=square, color=blue, style=bold, label="ABCACB, {ABC}\n(∞,0,0,0,0,0)"];1777001188 [shape=square, color=blue, style=bold, label="d, {g,d}\n(∞,0,0,0,0,0)"];11287976 [shape=square, color=blue, style=bold, label="b.d + c.e, {b.d + c.e + c.f + b.g}\n(∞,0,0,0,0,0)"];-1092705565 [shape=square, color=blue, style=bold, label="f, {e,f}\n(∞,0,0,0,0,0)"];-58372795->945131307[color=black, label="(-1,0,0,0,0,0)"];-58372795->-1092705565[color=black, label="(-1,0,0,0,0,0)"];-1478041764->11287976[color=black, label="(-1,0,0,0,0,0)"];-1478041764->-58372795[color=black, label="(-1,0,0,0,0,0)"];11287976->1777001188[color=black, label="(-1,0,0,0,0,0)"];11287976->695410661[color=black, label="(-1,0,0,0,0,0)"]}
```

The subgame of @fig-derived-trace-eq-game that actually is used in *equiv.io*, disregarding some attacker options.
:::

Still, non-determinism in the transition system might lead to exponentially-sized derived games.
Especially in the case of bisimilarity and similarity, such a blow up is not necessary as @sec-approach has shown.

### Regaining Polynomiality in Derived Equivalence Games {#sec-regaining-polynomiality}

:::{#prp-defender-options}
If the attacker wins $(\attackerpos{p, Q}, e)$ in a derived preorder game $\gamespectroscopyeq{N}$ or $\gamespectroscopyceq{N}$, they also win $(\attackerpos{p, Q'}, e)$ for all $Q' \subseteq Q$.
:::
:::proof
If the attacker wins $\attackerpos{p, Q}$ with $e$ in a spectroscopy game, they also win $\attackerpos{p, Q'}$ with $e$ for all $Q' \subseteq Q$.
This is a side-consequence of the spectroscopy characterization (@lem-strong-spectroscopy-game-soundness and -@lem-strong-spectroscopy-game-completeness) through distinctions, as 
$Q \cap \semantics{\varphi} = \varnothing$ implies $Q' \cap \semantics{\varphi} = \varnothing$ for any $\varphi$.^[TODO: Try this out in Isabelle project]

We can lift this result immediately to the derived preorder games as in @thm-derive-eq-games-characterize.
:::
<!--
:::proof
The attacker's win must be due to a move sequence along a path of transitions to an attacker-won defender position $\attackerpos{p, Q} \gamemoveblank \attackerpos{p_1, Q_1} \gamemoveblank \dots \gamemoveblank \attackerpos{p_n, Q_n} \gamemoveblank \defenderpos{p_n, Q_n \setminus Q_*, Q_*}$ with $\varnothing \neq Q_* \subseteq Q_n$.

The same transitions justify a move sequence $\attackerpos{p, Q'} \gamemoveblank \attackerpos{p_1, Q'_1} \gamemoveblank \dots \gamemoveblank \attackerpos{p_n, Q_n} \gamemoveblank \defenderpos{p_n, Q'_n \setminus Q'_*, Q'_*}$ with $Q'_* = Q_* \cap Q'_n$, where each $Q'_n \subseteq Q_n$.
These moves must also be winning for the attacker:

Every conjunction answer $\attackerpos[\wedge]{p_n, q}$ with $q \in Q'_n \setminus Q'_*$ the defender may choose would also be possible from the end of the original move sequence.
If the defender decides for the revival to $\attackerpos{p_n,Q'_*}$, we can continue to apply our strategy transfer from $\attackerpos{p_n,Q_*}$, since $Q'_* \subseteq Q_*$ and since the well-foundedness of the original attacker strategy ensures that the defender options must come to an end at some point. 
:::-->

:::{#lem-conjunction-optimization}
If the attacker wins $(\attackerpos{p, Q}, e)$ with $\relsize{Q} > 1$ in a derived preorder game with $e \geq (0,\infty,\infty,\infty,0,0)$, then they can also win without using any observation moves of the form $(\attackerpos{p, Q}, e) \gamemoveblank (\attackerpos{p', Q'}, e')$.
:::
:::proof
The move must be due to a transition $p \step{α} p'$ with $Q \step{α} Q'$. 
Instead of the observation, the attacker can move to a conjunction $(\attackerpos{p, Q}, e) \gamemoveblank (\defenderpos{p, Q, \varnothing}, e)$.
After the defender choice of $q \in Q$, the game continues $\dots \gamemoveblank (\attackerpos[\wedge]{p, q}, e) \gamemoveblank (\attackerpos{p, \set{q}}, e) \gamemoveblank (\attackerpos{p', \derivatives{q, α}}, e')$, thanks to the sufficient energy budget.
As $\derivatives{q, α} \subseteq Q'$, we can use @prp-defender-options.
:::

As a consequence, we can obtain a polynomial complexity bound for equivalences that do not restrict conjunctions and positive conjuncts.

:::{#lem-optimized-eq-complexity}
For a strong notion $N \in \set{0, 1, \infty}^6$ with $N \geq (0,\infty,\infty,\infty,0,0)$, and a system $(\states,\actions,\step{})$,
one can decide $p \bpreord{\observations{N}} q$ in polynomial time,
by computing who wins the $N$-preorder game in $\bigo{\relsize{\states} \cdot \relsize{\step{}}}$ time and $\bigo{\relsize{\states}^2 \cdot \relsize{\actions}}$ space.
:::
:::proof
We can use the clever version of the strong spectroscopy game $\gamespectroscopyclever$ to decide individual equivalences for these coordinates by @thm-derive-eq-games-characterize and @thm-clever-strong-spectroscopy-correctness.
For $N \geq (0,\infty,\infty,\infty,0,0)$, this also works on the subgraph where non-determinism is resolved immediately thanks to @lem-conjunction-optimization.

We want to use that, according to @prp-reachability-game-complexity, deciding a reachability game $(G,G_\defender,\gamemoveblank)$ takes $\bigo{\relsize{\gamemoveblank}}$ time and $\bigo{\relsize{G}}$ space.

We observe that the ${0,1,\infty}$-valued energy components in the game might only create a constant-factor increase in the size of $\gamespectroscopyceq{N}$, compared to the underlying game $\gamespectroscopyclever$.^[
  If we were to allow $k$-step equivalences as in @fig-polynomial-strong-spectrum, the $k$ would also become a factor.
]
Therefore, the following arguments focus on the latter.

@lem-conjunction-optimization allows us to prune away all moves deriving from observations from $\attackerpos{p,Q}$ with $\relsize{Q} > 1$.
The pruning restricts the possibilities of $Q$ that can appear on the right-hand side of $\attackerpos{p,Q}$-positions to the sets $\derivatives{\cdot, \cdot}$, that is, to $\relsize{\states} \cdot \relsize{\actions}$ options.
Therefore, these attacker positions are bounded by $\bigo{\relsize{\states}^2 \cdot \relsize{\actions}}$.

In the clever spectroscopy game $\gamespectroscopyclever$, there is a maximum of only five defender positions per such attacker position.
Also, the following attacker conjunct positions, bounded by $\relsize{\states}^2$, do not affect the bound.

For the moves, only the amounts of observation moves and conjunct answers can impact complexity.
The observations are bounded in $\bigo{\relsize{\states} \cdot \relsize{\step{}}}$,
and the conjunct answers in $\bigo{\relsize{\states}}$, which is dominated by the first. 

Inserting our bounds in @prp-reachability-game-complexity, we get a time complexity of $\bigo{\relsize{\states} \cdot \relsize{\step{}}}$ and $\bigo{\relsize{\states}^2 \cdot \relsize{\actions}}$ space.^[
  This is with the understanding that the $\bigo{\relsize{\states}^2 \cdot \relsize{\actions}}$ is dominated by $\bigo{\relsize{\states} \cdot \relsize{\step{}}}$ with respect to time---of course, each position must be constrcucted at some point.
]
:::

::: {#exm-instance-game-sizes}
Let us see how the instance game sizes behave on @fig-instance-games-strong-ltbt-spectrum the games of @exm-spectroscopy-equivalence-checking!
@fig-instance-games-strong-ltbt-spectrum maps out the sizes of game instantiations for the preorders of the strong spectrum @fig-strong-ltbt-spectrum.
Each game is derived from the clever spectroscopy game, with pruning and with capped non-determinsm where possible; to enable equivalence checks, the games combine the parts under $\attackerpos{\literal{ABCACB}, \set{\literal{ABC}}}$ and under $\attackerpos{\literal{ABC}, \set{\literal{ABCACB}}}$.
The game size is defined as the sum of positions and moves, $\relsize{\game} = \relsize{G} + \relsize{\gamemoveblank}$.
Red parts symbolize bigger game graphs.

:::: {#fig-instance-games-strong-ltbt-spectrum}

```tikz
\begin{tikzpicture}[auto,node distance=2.5cm,align=center]
  \node[fill=purple!30!yellow!60] (B){
    $\relsize{\gamespectroscopyceq{\notionname{B}}} = 105$\\
    $\infty,\infty,\infty,\infty,\infty,\infty$};
  \node[fill=purple!67!yellow!60] (S2)[below of=B, node distance=1.2cm]{
    $\relsize{\gamespectroscopyceq{\notionname{2S}}} = 200$\\
    $\infty,\infty,\infty,\infty,\infty,1$};
  \node[fill=purple!82!yellow!60] (RS)[below left of=S2]{
    $\relsize{\gamespectroscopyceq{\notionname{RS}}} = 248$\\
    $\infty,\infty,\infty,\infty,1,1$};
  \node[fill=purple!96!yellow!60] (RT)[below right of=RS]{
    $\relsize{\gamespectroscopyceq{\notionname{RT}}} = 288$\\
    $\infty,\infty,\infty,1,1,1$};
  \node[fill=purple!72!yellow!60] (FT)[below left of=RT]{
    $\relsize{\gamespectroscopyceq{\notionname{FT}}} = 216$\\
    $\infty,\infty,\infty,0,1,1$};
  \node[fill=purple!42!yellow!60] (R)[below right of=RT]{
    $\relsize{\gamespectroscopyceq{\notionname{R}}} = 126$\\
    $\infty,1,1,1,1,1$};
  \node[fill=purple!48!yellow!60] (PF)[above right of=R]{
    $\relsize{\gamespectroscopyceq{\notionname{PF}}} = 144$\\
    $\infty,1,\infty,\infty,\infty,1$};
  \node[fill=purple!30!yellow!60] (IF)[below right of=R]{
    $\relsize{\gamespectroscopyceq{\notionname{IF}}} = 105$\\
    $\infty,1,0,0,\infty,1$};
  \node[fill=purple!32!yellow!60] (S)[left of=FT, node distance=3.8cm]{
    $\relsize{\gamespectroscopyceq{\notionname{1S}}} = 95$\\
    $\infty,\infty,\infty,\infty,0,0$};
  \node[fill=purple!32!yellow!60] (RV)[below left of=R]{
    $\relsize{\gamespectroscopyceq{\notionname{RV }}} = 96$\\
    $\infty,1,1,0,1,1$};
  \node[fill=purple!32!yellow!60] (F)[below right of=RV]{
    $\relsize{\gamespectroscopyceq{\notionname{F}}} = 96$\\
    $\infty,1,0,0,1,1$};
  \node[fill=purple!7!yellow!60] (T)[below left of=F]{
    $\relsize{\gamespectroscopyceq{\notionname{T}}} = 20$\\
    $\infty,0,0,0,0,0$};
  \node[fill=purple!3!yellow!60] (E)[below of=T, node distance=1.2cm]{
    $\relsize{\gamespectroscopyceq{\notionname{E}}} = 8$\\
    $1,0,0,0,0,0$};
  \node[fill=purple!1!yellow!60] (U)[below of=E, node distance=1.2cm]{
    $\relsize{\gamespectroscopyceq{\notionname{U}}} = 2$\\
    $0,0,0,0,0,0$};

  \path
  (B) edge (S2)
  (S2) edge (RS)
  (S2) edge (PF)
  (RS) edge (S)
  (RS) edge (RT)
  (RT) edge (R)
  (RT) edge (FT)
  (PF) edge (R)
  (PF) edge (IF)
  (S) edge (T)
  (FT) edge (RV)
  (R) edge (RV)
  (IF) edge (F)
  (RV) edge (F)
  (F) edge (T)
  (T) edge (E)
  (E) edge (U)
  ;
\end{tikzpicture}
```

Instance game sizes of @exm-instance-game-sizes.
::::

The data match our thoughts on game sizes in @sec-deriving-eq-games.
For instance, around the trace game $\gamespectroscopyceq{\notionname{T}}$, we can observe that zero-components usually reduce the game graph size.
Between mutual simulation $\gamespectroscopyceq{\notionname{1S}}$ and bisimulation $\gamespectroscopyceq{\notionname{B}}$, one can see that $\infty$-components and $0$-components are usually better than $1$-components.
The game for ready traces $\gamespectroscopyceq{\notionname{RT}}$, where all dimensions play a role, is the most costy.
:::

TODO: Maybe also example where non-determinism has more effect?

## Discussion

- Mention option of non-perfect attacker information as alternative to subset construction
- Difference to @bjn2022decidingAllBehavioralEqs:
  - Lower exponentiality in conjunctions
  - No explicit construction of formulas
- highlight analogy to apartness (@geuversJacobs2021apartness)
- mention that  $\bigo{\relsize{\states} \cdot \relsize{\step{}}}$ matches best algos for simulation, but not for bisimulation.